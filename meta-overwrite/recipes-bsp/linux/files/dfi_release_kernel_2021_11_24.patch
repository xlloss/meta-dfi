diff --git a/arch/arm64/boot/dts/freescale/Makefile b/arch/arm64/boot/dts/freescale/Makefile
index 6948264..d0d6d59 100644
--- a/arch/arm64/boot/dts/freescale/Makefile
+++ b/arch/arm64/boot/dts/freescale/Makefile
@@ -64,7 +64,9 @@ dtb-$(CONFIG_ARCH_MXC) += imx8mn-ab2.dtb imx8mn-ddr4-ab2.dtb
 dtb-$(CONFIG_ARCH_MXC) += imx8mp-evk.dtb imx8mp-evk-root.dtb imx8mp-evk-inmate.dtb imx8mp-evk-rpmsg.dtb \
 			  imx8mp-evk-rm67191.dtb imx8mp-evk-flexcan2.dtb imx8mp-evk-it6263-lvds-dual-channel.dtb \
 			  imx8mp-evk-jdi-wuxga-lvds-panel.dtb imx8mp-ab2.dtb imx8mp-evk-sof-wm8960.dtb \
-			  imx8mp-evk-dsp.dtb imx8mp-evk-ov2775.dtb imx8mp-evk-basler.dtb imx8mp-m8mp553.dtb
+			  imx8mp-evk-dsp.dtb imx8mp-evk-ov2775.dtb imx8mp-evk-basler.dtb \
+			  imx8mp-m8mp553-lvdsg215hv.dtb imx8mp-m8mp553-lvdsam1024.dtb
+
 dtb-$(CONFIG_ARCH_MXC) += imx8mq-evk.dtb imx8mq-evk-rpmsg.dtb imx8mq-evk-pcie1-m2.dtb imx8mq-evk-usd-wifi.dtb \
 			  imx8mq-evk-usdhc2-m2.dtb
 dtb-$(CONFIG_ARCH_MXC) += imx8mq-evk-ak4497.dtb imx8mq-evk-audio-tdm.dtb imx8mq-evk-pdm.dtb
diff --git a/arch/arm64/boot/dts/freescale/imx8mp-m8mp553-lvdsam1024.dts b/arch/arm64/boot/dts/freescale/imx8mp-m8mp553-lvdsam1024.dts
new file mode 100644
index 00000000..9d9f83a
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8mp-m8mp553-lvdsam1024.dts
@@ -0,0 +1,70 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2021 DFI
+ * slash.huang@dfi.com
+ */
+
+/dts-v1/;
+
+#include "imx8mp-m8mp553.dtsi"
+
+/ {
+	model = "DFI M8MP553 LVDSMode-SAM1024";
+	compatible = "dfi,m8mp553", "fsl,imx8mp";
+
+	lvds_backlight: lvds_backlight {
+		compatible = "pwm-backlight";
+		pwms = <&pwm2 0 100000>; /* 10KHz*/
+		status = "okay";
+		pinctrl-0 = <&pinctrl_backlight_en>, <&pinctrl_backlight_pwm2>;
+		power-supply = <&backlight_power>;
+		enable-gpio = <&gpio1 1 GPIO_ACTIVE_HIGH>;
+		post-bl-on-delay-ms = <16>;
+		post-pwm-on-delay-ms = <1000>;
+		brightness-levels = < 0  1  2  3  4  5  6  7  8  9
+				     10 11 12 13 14 15 16 17 18 19
+				     20 21 22 23 24 25 26 27 28 29
+				     30 31 32 33 34 35 36 37 38 39
+				     40 41 42 43 44 45 46 47 48 49
+				     50 51 52 53 54 55 56 57 58 59
+				     60 61 62 63 64 65 66 67 68 69
+				     70 71 72 73 74 75 76 77 78 79
+				     80 81 82 83 84 85 86 87 88 89
+				     90 91 92 93 94 95 96 97 98 99
+				    100>;
+		default-brightness-level = <80>;
+	};
+};
+
+&ldb {
+	status = "okay";
+	startup-delay-us = <20>;
+	lvds-channel@0 {
+		fsl,data-mapping = "spwg";
+		fsl,data-width = <24>;
+		status = "okay";
+
+		port@1 {
+			reg = <1>;
+			lvds0_port_1: endpoint {
+					remote-endpoint = <&panel_lvds0_in>;
+			};
+		};
+	};
+};
+
+&panel {
+	status = "okay";
+	panel-timing {
+		/* 1024x600 @60Hz : AM-1024600DTZQW-TD1H */
+		clock-frequency = <51000000>;
+		hactive = <1024>;
+		vactive = <600>;
+		hsync-len = <10>;
+		hfront-porch = <160>;
+		hback-porch = <160>;
+		vsync-len = <5>;
+		vfront-porch = <12>;
+		vback-porch = <23>;
+	};
+};
diff --git a/arch/arm64/boot/dts/freescale/imx8mp-m8mp553-lvdsg215hv.dts b/arch/arm64/boot/dts/freescale/imx8mp-m8mp553-lvdsg215hv.dts
new file mode 100644
index 00000000..6140733
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8mp-m8mp553-lvdsg215hv.dts
@@ -0,0 +1,71 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2021 DFI
+ * slash.huang@dfi.com
+ */
+
+/dts-v1/;
+
+#include "imx8mp-m8mp553.dtsi"
+
+/ {
+	model = "DFI M8MP553 LVDSMode-LVDSG215HV";
+	compatible = "dfi,m8mp553", "fsl,imx8mp";
+
+
+	lvds_backlight: lvds_backlight {
+		compatible = "pwm-backlight";
+		pwms = <&pwm2 0 100000>; /* 10KHz*/
+		status = "okay";
+		pinctrl-0 = <&pinctrl_backlight_en>, <&pinctrl_backlight_pwm2>;
+		power-supply = <&backlight_power>;
+		enable-gpio = <&gpio1 1 GPIO_ACTIVE_HIGH>;
+		post-bl-on-delay-ms = <16>;
+		post-pwm-on-delay-ms = <1000>;
+		brightness-levels = < 0  1  2  3  4  5  6  7  8  9
+				     10 11 12 13 14 15 16 17 18 19
+				     20 21 22 23 24 25 26 27 28 29
+				     30 31 32 33 34 35 36 37 38 39
+				     40 41 42 43 44 45 46 47 48 49
+				     50 51 52 53 54 55 56 57 58 59
+				     60 61 62 63 64 65 66 67 68 69
+				     70 71 72 73 74 75 76 77 78 79
+				     80 81 82 83 84 85 86 87 88 89
+				     90 91 92 93 94 95 96 97 98 99
+				    100>;
+		default-brightness-level = <80>;
+	};
+};
+
+&ldb {
+	status = "okay";
+	fsl,dual-channel;
+	startup-delay-us = <20>;
+	lvds-channel@0 {
+		fsl,data-mapping = "spwg";
+		fsl,data-width = <24>;
+		status = "okay";
+
+		port@1 {
+			reg = <1>;
+			lvds0_port_1: endpoint {
+					remote-endpoint = <&panel_lvds0_in>;
+			};
+		};
+	};
+};
+
+&panel {
+	panel-timing {
+		/* 1920x1080 @60Hz : G215HVN01.0 */
+		clock-frequency = <72000000>;
+		hactive = <1920>;
+		vactive = <1080>;
+		hsync-len = <44>;
+		hfront-porch = <88>;
+		hback-porch = <148>;
+		vsync-len = <5>;
+		vfront-porch = <4>;
+		vback-porch = <36>;
+	};
+};
diff --git a/arch/arm64/boot/dts/freescale/imx8mp-m8mp553.dts b/arch/arm64/boot/dts/freescale/imx8mp-m8mp553.dts
deleted file mode 100644
index 263ded9..00000000
--- a/arch/arm64/boot/dts/freescale/imx8mp-m8mp553.dts
+++ /dev/null
@@ -1,1450 +0,0 @@
-// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
-/*
- * Copyright 2021 DFI
- */
-
-/dts-v1/;
-
-#include <dt-bindings/usb/pd.h>
-#include "imx8mp.dtsi"
-
-#define LVDS_PANEL_G215HVN010
-
-/ {
-	model = "DFI M8MP553 Board";
-	compatible = "fsl,imx8mp-evk", "fsl,imx8mp";
-
-	reserved-memory {
-		#address-cells = <2>;
-		#size-cells = <2>;
-		ranges;
-
-		rpmsg_reserved: rpmsg@0x55800000 {
-			no-map;
-			reg = <0 0x55800000 0 0x800000>;
-		};
-	};
-
-	chosen {
-		stdout-path = &uart2;
-	};
-
-	reg_can1_stby: regulator-can1-stby {
-		status = "disabled";
-		compatible = "regulator-fixed";
-		regulator-name = "can1-stby";
-		pinctrl-names = "default";
-		/* pinctrl-0 = <&pinctrl_flexcan1_reg>; */
-		regulator-min-microvolt = <3300000>;
-		regulator-max-microvolt = <3300000>;
-		gpio = <&gpio5 5 GPIO_ACTIVE_HIGH>;
-		enable-active-high;
-	};
-
-	reg_usdhc2_vmmc: regulator-usdhc2 {
-		compatible = "regulator-fixed";
-		regulator-name = "VSD_3V3";
-		regulator-min-microvolt = <3300000>;
-		regulator-max-microvolt = <3300000>;
-		gpio = <&gpio2 19 GPIO_ACTIVE_HIGH>;
-		enable-active-high;
-		startup-delay-us = <100>;
-		off-on-delay-us = <12000>;
-	};
-
-	reg_gpio_sd: regulator-sd {
-			compatible = "regulator-gpio";
-			pinctrl-names = "default";
-			pinctrl-0 = <&pinctrl_sd_en>;
-			regulator-min-microvolt = <0000001>;
-			regulator-max-microvolt = <3300000>;
-			regulator-name = "gpio_sd";
-			regulator-type = "voltage";
-			gpios = <&gpio2 8 GPIO_ACTIVE_LOW>;
-			gpios-states = <1>;
-			states = <3300000 0x1 0000000 0x0>;
-	};
-
-	reg_gpio_usb_hub: regulator-usb_hub {
-			compatible = "regulator-gpio";
-			pinctrl-names = "default";
-			pinctrl-0 = <&pinctrl_usb_hub_en>;
-			regulator-min-microvolt = <0000001>;
-			regulator-max-microvolt = <3300000>;
-			regulator-name = "gpio_usb_hub";
-			regulator-type = "voltage";
-			gpios = <&gpio3 25 GPIO_ACTIVE_LOW>;
-			gpios-states = <1>;
-			states = <3300000 0x1 0000000 0x0>;
-	};
-
-	reg_gpio_usb3_typea: regulator-usb3-typea {
-			compatible = "regulator-gpio";
-			pinctrl-names = "default";
-			pinctrl-0 = <&pinctrl_usb3_typea_en>;
-			regulator-min-microvolt = <0000001>;
-			regulator-max-microvolt = <3300000>;
-			regulator-name = "gpio_usb3_typea";
-			regulator-type = "voltage";
-			gpios = <&gpio3 22 GPIO_ACTIVE_LOW>;
-			gpios-states = <1>;
-			states = <3300000 0x1 0000000 0x0>;
-	};
-
-	reg_gpio_usb2_typea: regulator-usb2-typea {
-			compatible = "regulator-gpio";
-			pinctrl-names = "default";
-			pinctrl-0 = <&pinctrl_usb2_typea_en>;
-			regulator-min-microvolt = <0000001>;
-			regulator-max-microvolt = <3300000>;
-			regulator-name = "gpio_usb2_typea";
-			regulator-type = "voltage";
-			gpios = <&gpio3 23 GPIO_ACTIVE_LOW>;
-			gpios-states = <1>;
-			states = <3300000 0x1 0000000 0x0>;
-	};
-
-	reg_gpio_usb2_hdr: regulator-usb2-hdr {
-			compatible = "regulator-gpio";
-			pinctrl-names = "default";
-			pinctrl-0 = <&pinctrl_usb2_hdr_en>;
-			regulator-min-microvolt = <0000001>;
-			regulator-max-microvolt = <3300000>;
-			regulator-name = "gpio_usb2_hdr";
-			regulator-type = "voltage";
-			gpios = <&gpio3 24 GPIO_ACTIVE_LOW>;
-			gpios-states = <1>;
-			states = <3300000 0x1 0000000 0x0>;
-	};
-
-	reg_gpio_usb2_otg: regulator-usb2-otg {
-			compatible = "regulator-gpio";
-			pinctrl-names = "default";
-			pinctrl-0 = <&pinctrl_usb2_otg_en>;
-			regulator-min-microvolt = <0000001>;
-			regulator-max-microvolt = <3300000>;
-			regulator-name = "gpio_usb2_otg";
-			regulator-type = "voltage";
-			gpios = <&gpio3 21 GPIO_ACTIVE_LOW>;
-			gpios-states = <1>;
-			states = <3300000 0x1 0000000 0x0>;
-	};
-
-	reg_lvds_panel: regulator-reg_lvds_panel {
-		compatible = "regulator-gpio";
-		pinctrl-names = "default";
-		pinctrl-0 = <&pinctrl_panel_pwr_en>;
-		regulator-min-microvolt = <0000001>;
-		regulator-max-microvolt = <3300000>;
-		regulator-name = "lvds_panel_pwr";
-		regulator-type = "voltage";
-		gpios = <&gpio1 0 GPIO_ACTIVE_HIGH>;
-		gpios-states = <0>;
-		states = <3300000 0x1 0000001 0x0>;
-		status = "okay";
-	};
-
-	reg_com_pwr: regulator-reg_com_pwr {
-		compatible = "regulator-gpio";
-		pinctrl-names = "default";
-		pinctrl-0 = <&pinctrl_com_pwr_en>;
-		regulator-min-microvolt = <0000001>;
-		regulator-max-microvolt = <3300000>;
-		regulator-name = "com_pwr_en";
-		regulator-type = "voltage";
-		gpios = <&gpio2 9 GPIO_ACTIVE_HIGH>;
-		gpios-states = <1>;
-		states = <3300000 0x1 0000001 0x0>;
-		status = "okay";
-	};
-
-	reg_audio_vdda: regulator-audio_vdda {
-		compatible = "regulator-fixed";
-		regulator-name = "fixed-3.3V";
-		regulator-min-microvolt = <3300000>;
-		regulator-max-microvolt = <3300000>;
-		regulator-boot-on;
-		regulator-always-on;
-	};
-
-	reg_audio_vddio: regulator-audio_vddio {
-		compatible = "regulator-fixed";
-		regulator-name = "fixed-3.3V";
-		regulator-min-microvolt = <3300000>;
-		regulator-max-microvolt = <3300000>;
-		regulator-boot-on;
-		regulator-always-on;
-	};
-
-	reg_audio_vddd: regulator-audio_vddd {
-		compatible = "regulator-fixed";
-		regulator-name = "fixed-1.8V";
-		regulator-min-microvolt = <1800000>;
-		regulator-max-microvolt = <1800000>;
-		regulator-boot-on;
-		regulator-always-on;
-	};
-
-	reg_keyb_pwr: regulator-reg_keyb_pwr {
-		compatible = "regulator-gpio";
-		pinctrl-names = "default";
-		pinctrl-0 = <&pinctrl_keyb_pwr_en>;
-		regulator-min-microvolt = <0000001>;
-		regulator-max-microvolt = <3300000>;
-		regulator-name = "keyb_pwr_en";
-		regulator-type = "voltage";
-		gpios = <&gpio1 11 GPIO_ACTIVE_HIGH>;
-		gpios-states = <1>;
-		states = <3300000 0x1 0000001 0x0>;
-		status = "okay";
-	};
-
-	reg_keyb_rst: regulator-reg_keyb_rst {
-		compatible = "regulator-gpio";
-		pinctrl-names = "default";
-		pinctrl-0 = <&pinctrl_keyb_rst_en>;
-		regulator-min-microvolt = <0000001>;
-		regulator-max-microvolt = <3300000>;
-		regulator-name = "keyb_rst_en";
-		regulator-type = "voltage";
-		gpios = <&gpio1 5 GPIO_ACTIVE_HIGH>;
-		gpios-states = <1>;
-		states = <3300000 0x1 0000001 0x0>;
-		status = "okay";
-	};
-
-	reg_eqos_rst: regulator-reg_eqos_rst {
-		compatible = "regulator-gpio";
-		pinctrl-names = "default";
-		pinctrl-0 = <&pinctrl_eqos_rst_en>;
-		regulator-min-microvolt = <0000001>;
-		regulator-max-microvolt = <3300000>;
-		regulator-name = "eqos_rst_en";
-		regulator-type = "voltage";
-		gpios = <&gpio4 0 GPIO_ACTIVE_HIGH>;
-		gpios-states = <1>;
-		states = <3300000 0x1 0000001 0x0>;
-		status = "okay";
-	};
-
-	reg_fec_rst: regulator-reg_fec_rst {
-		compatible = "regulator-gpio";
-		pinctrl-names = "default";
-		pinctrl-0 = <&pinctrl_fec_rst_en>;
-		regulator-min-microvolt = <0000001>;
-		regulator-max-microvolt = <3300000>;
-		regulator-name = "fec_rst_en";
-		regulator-type = "voltage";
-		gpios = <&gpio4 2 GPIO_ACTIVE_HIGH>;
-		gpios-states = <1>;
-		states = <3300000 0x1 0000001 0x0>;
-		status = "okay";
-	};
-
-	backlight_power: regulator-backlight_power {
-		compatible = "regulator-gpio";
-		regulator-name = "lcd_backlight_pwr";
-		regulator-min-microvolt = <0000001>;
-		regulator-max-microvolt = <3300000>;
-		gpios = <&gpio1 1 GPIO_ACTIVE_HIGH>;
-		gpios-states = <0>;
-		states = <3300000 0x1 0000001 0x0>;
-	};
-
-	panel-lvds0 {
-		compatible = "panel-lvds";
-		status = "okay";
-		width-mm = <261>;
-		height-mm = <163>;
-		data-mapping = "jeida-24";
-
-		backlight = <&lvds_backlight>;
-		power-supply = <&reg_lvds_panel>;
-		backlight-delay = <20>;
-
-		#if LVDS_PANEL_AM1024600DTZQWTD1H
-		panel-timing {
-			/* 1024x600 @60Hz : AM-1024600DTZQW-TD1H */
-			clock-frequency = <51000000>;
-			hactive = <1024>;
-			vactive = <600>;
-			hsync-len = <10>;
-			hfront-porch = <160>;
-			hback-porch = <160>;
-			vsync-len = <5>;
-			vfront-porch = <12>;
-			vback-porch = <23>;
-		};
-		#endif
-
-		#ifdef LVDS_PANEL_G215HVN010
-		panel-timing {
-			/* 1920x1080 @60Hz : G215HVN01.0 */
-			clock-frequency = <72000000>;
-			hactive = <1920>;
-			vactive = <1080>;
-			hsync-len = <44>;
-			hfront-porch = <88>;
-			hback-porch = <148>;
-			vsync-len = <5>;
-			vfront-porch = <4>;
-			vback-porch = <36>;
-		};
-		#endif
-
-		port {
-			panel_lvds0_in: endpoint {
-				remote-endpoint = <&lvds0_port_1>;
-			};
-		};
-	};
-
-	lvds_backlight: lvds_backlight {
-		compatible = "pwm-backlight";
-		pwms = <&pwm2 0 100000>; /* 10KHz*/
-		status = "okay";
-		pinctrl-0 = <&pinctrl_backlight_en>, <&pinctrl_backlight_pwm2>;
-		power-supply = <&backlight_power>;
-		post-pwm-on-delay-ms = <130>;
-		brightness-levels = < 0  1  2  3  4  5  6  7  8  9
-				     10 11 12 13 14 15 16 17 18 19
-				     20 21 22 23 24 25 26 27 28 29
-				     30 31 32 33 34 35 36 37 38 39
-				     40 41 42 43 44 45 46 47 48 49
-				     50 51 52 53 54 55 56 57 58 59
-				     60 61 62 63 64 65 66 67 68 69
-				     70 71 72 73 74 75 76 77 78 79
-				     80 81 82 83 84 85 86 87 88 89
-				     90 91 92 93 94 95 96 97 98 99
-				    100>;
-		default-brightness-level = <80>;
-	};
-
-	leds {
-		compatible = "gpio-leds";
-		pinctrl-names = "default";
-		pinctrl-0 = <&pinctrl_sys_led> , <&pinctrl_dbg_led>;
-
-		led_sys: led_sys {
-			label = "led_sys";
-			gpios = <&gpio3 16 GPIO_ACTIVE_HIGH>;
-			default-state = "on";
-			linux,default-trigger = "gpio";
-		};
-
-		led_dbg: led_dbg {
-			label = "led_dbg";
-			gpios = <&gpio3 6 GPIO_ACTIVE_HIGH>;
-			default-state = "on";
-			linux,default-trigger = "heartbeat";
-		};
-
-	};
-
-	videopllsscm: videopll_sscm@30360034 {
-		compatible = "fsl,imx8mp-videopll-sscm";
-		reg = <0 0x30360034 0 0x1000>;
-		clocks = <&clk IMX8MP_VIDEO_PLL1>;
-		clock-names = "video_pll1";
-
-		/*
-		  MF: 125000Hz
-		  MR: 3.1%
-		*/
-		mf = <125000>;
-		mr = <310>;
-		pf = <2>;
-	};
-
-	/* mode select
-	 * {"rs422-full"},
-	 * {"pure-rs232"},
-	 * {"rs485-half tx-en low act"},
-	 * {"rs485-half tx-en hi  act"},
-	 * {"rs422-full with termi bias resistor"},
-	 * {"pure-rs232 co-exists rs485"},
-	 * {"rs485-half with termi bias resistor"},
-	 * {"shutdown"},
-	 */
-	f81439_ctl: f81439_ctl@0 {
-		compatible = "fintek, f81439";
-		pinctrl-0 = <&pinctrl_f81439>;
-		default-mode = "pure-rs232";
-		mode0-gpios = <&gpio4 25 GPIO_ACTIVE_HIGH>;
-		mode1-gpios = <&gpio4 26 GPIO_ACTIVE_HIGH>;
-		mode2-gpios = <&gpio4 27 GPIO_ACTIVE_HIGH>;
-	};
-
-	sound {
-		compatible = "simple-audio-card";
-		simple-audio-card,name = "sgtl5000";
-		simple-audio-card,format = "i2s";
-		simple-audio-card,convert-rate = <48000>;
-
-		simple-audio-card,bitclock-master = <&dailink0_master>;
-		simple-audio-card,frame-master = <&dailink0_master>;
-
-		simple-audio-card,widgets =
-			"Microphone", "Microphone Jack",
-			"Headphone", "Headphone Jack",
-			"Speaker", "Speaker Ext",
-			"Line", "Line In Jack";
-
-		simple-audio-card,routing =
-			"MIC_IN", "Microphone Jack",
-			"Microphone Jack", "Mic Bias",
-			"LINE_IN", "Line In Jack",
-			"Headphone Jack", "HP_OUT",
-			"Speaker Ext", "LINE_OUT",
-			"Playback", "AIFIN",
-			"AIFOUT", "Capture";
-
-		simple-audio-card,cpu {
-			#sound-dai-cells = <0>;
-			sound-dai = <&sai3>;
-		};
-
-		dailink0_master: simple-audio-card,codec {
-			sound-dai = <&sgtl5000>;
-			clocks = <&audiomix_clk IMX8MP_CLK_AUDIOMIX_SAI3_MCLK1>;
-		};
-	};
-
-	xhci_otg_sw: xhci_otg_sw {
-		pinctrl-names = "default";
-		pinctrl-0 = <&pinctrl_otg_sw>;
-		compatible = "dfi, otg-sw";
-		role-gpios = <&gpio1 10 GPIO_ACTIVE_HIGH>;
-
-		usb_con: connector {
-			port {
-				otg_sw: endpoint {
-					remote-endpoint = <&usb3_drd_sw>;
-				};
-			};
-		};
-
-	};
-};
-
-&clk {
-	init-on-array = <IMX8MP_CLK_HSIO_ROOT>;
-};
-
-&A53_0 {
-	cpu-supply = <&buck2_reg>;
-};
-
-/* IOJP1 */
-&pwm3 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_pwm3>;
-	status = "okay";
-};
-
-/* buzzer use */
-&pwm1 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_buzzer>;
-	status = "okay";
-};
-
-/* backlight use */
-&pwm2 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_backlight_pwm2>;
-	status = "okay";
-};
-
-&ecspi1 {
-	#address-cells = <1>;
-	#size-cells = <0>;
-	fsl,spi-num-chipselects = <1>;
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_ecspi1 &pinctrl_ecspi1_cs>;
-	status = "okay";
-
-	spidev0: spi@0 {
-		status = "okay";
-		reg = <0>;
-		compatible = "rohm,dh2228fv";
-		spi-max-frequency = <500000>;
-	};
-};
-
-&eqos {
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_eqos>;
-	phy-mode = "rgmii-id";
-	phy-handle = <&ethphy0>;
-	stmmc-disable-dma-swrst;
-	status = "okay";
-
-	mdio {
-		compatible = "snps,dwmac-mdio";
-		#address-cells = <1>;
-		#size-cells = <0>;
-
-		ethphy0: ethernet-phy@1 {
-			compatible = "ethernet-phy-ieee802.3-c22";
-			reg = <7>;
-			eee-broken-1000t;
-		};
-	};
-};
-
-&fec {
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_fec>;
-	phy-mode = "rgmii-id";
-	phy-handle = <&ethphy1>;
-	fsl,magic-packet;
-	status = "okay";
-
-	mdio {
-		#address-cells = <1>;
-		#size-cells = <0>;
-
-		ethphy1: ethernet-phy@1 {
-			compatible = "ethernet-phy-ieee802.3-c22";
-			reg = <5>;
-			eee-broken-1000t;
-		};
-	};
-};
-
-&i2c1 {
-	clock-frequency = <100000>;
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_i2c1>;
-	status = "okay";
-
-	pmic: pca9450@25 {
-		reg = <0x25>;
-		compatible = "nxp,pca9450";
-		/* PMIC PCA9450 PMIC_nINT GPIO1_IO3 */
-		pinctrl-0 = <&pinctrl_pmic>;
-		gpio_intr = <&gpio1 3 GPIO_ACTIVE_LOW>;
-
-		regulators {
-			#address-cells = <1>;
-			#size-cells = <0>;
-
-			pca9450,pmic-buck2-uses-i2c-dvs;
-			/* Run/Standby voltage */
-			pca9450,pmic-buck2-dvs-voltage = <950000>, <850000>;
-
-			buck1_reg: regulator@0 {
-				reg = <0>;
-				regulator-compatible = "buck1";
-				regulator-min-microvolt = <600000>;
-				regulator-max-microvolt = <2187500>;
-				regulator-boot-on;
-				regulator-always-on;
-				regulator-ramp-delay = <3125>;
-			};
-
-			buck2_reg: regulator@1 {
-				reg = <1>;
-				regulator-compatible = "buck2";
-				regulator-min-microvolt = <600000>;
-				regulator-max-microvolt = <2187500>;
-				regulator-boot-on;
-				regulator-always-on;
-				regulator-ramp-delay = <3125>;
-			};
-
-			buck4_reg: regulator@3 {
-				reg = <3>;
-				regulator-compatible = "buck4";
-				regulator-min-microvolt = <600000>;
-				regulator-max-microvolt = <3400000>;
-				regulator-boot-on;
-				regulator-always-on;
-			};
-
-			buck5_reg: regulator@4 {
-				reg = <4>;
-				regulator-compatible = "buck5";
-				regulator-min-microvolt = <600000>;
-				regulator-max-microvolt = <3400000>;
-				regulator-boot-on;
-				regulator-always-on;
-			};
-
-			buck6_reg: regulator@5 {
-				reg = <5>;
-				regulator-compatible = "buck6";
-				regulator-min-microvolt = <600000>;
-				regulator-max-microvolt = <3400000>;
-				regulator-boot-on;
-				regulator-always-on;
-			};
-
-			ldo1_reg: regulator@6 {
-				reg = <6>;
-				regulator-compatible = "ldo1";
-				regulator-min-microvolt = <1600000>;
-				regulator-max-microvolt = <3300000>;
-				regulator-boot-on;
-				regulator-always-on;
-			};
-
-			ldo2_reg: regulator@7 {
-				reg = <7>;
-				regulator-compatible = "ldo2";
-				regulator-min-microvolt = <800000>;
-				regulator-max-microvolt = <1150000>;
-				regulator-boot-on;
-				regulator-always-on;
-			};
-
-			ldo3_reg: regulator@8 {
-				reg = <8>;
-				regulator-compatible = "ldo3";
-				regulator-min-microvolt = <800000>;
-				regulator-max-microvolt = <3300000>;
-				regulator-boot-on;
-				regulator-always-on;
-			};
-
-			ldo4_reg: regulator@9 {
-				reg = <9>;
-				regulator-compatible = "ldo4";
-				regulator-min-microvolt = <800000>;
-				regulator-max-microvolt = <3300000>;
-				regulator-boot-on;
-				regulator-always-on;
-			};
-
-			ldo5_reg: regulator@10 {
-				reg = <10>;
-				regulator-compatible = "ldo5";
-				regulator-min-microvolt = <1800000>;
-				regulator-max-microvolt = <3300000>;
-			};
-		};
-	};
-
-	lm75: board-temp-sensor@4c {
-		compatible = "national,lm75b";
-		reg = <0x4c>;
-	};
-
-	s35390a: s35390a@30 {
-		compatible = "s35390a";
-		reg = <0x30>;
-
-		/*
-		 * set INT1 pin for user set frequency
-		 *
-		 * 0  : disable
-		 * 1  : 16 Hz
-		 * 2  : 8 Hz
-		 * 4  : 4 Hz
-		 * 8  : 2 Hz
-		 * 16 : 1 Hz
-		 */
-		user-set-frequency = <16>;
-	};
-};
-
-&i2c2 {
-	clock-frequency = <100000>;
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_i2c2>;
-	status = "okay";
-
-	at24c16: eeprom@50 {
-		compatible = "atmel,24c16";
-		reg = <0x50>;
-	};
-
-	f75387: f75387@2d {
-		compatible = "f75387";
-		reg = <0x2d>;
-
-		force-pwm-mode-3;
-
-		/*
-		 * pin5 is used as Fan fault function
-
-		 * 3: LED out(1Hz/0.5Hz select by LED_FREQ register)
-		 * 2: pin5 is used as Fan fault function
-		 * 1: pin5 is used as SMI
-		 * 0: pin5 function is GPIO2.(default)
-		 */
-		pin5-mode = <2>;
-
-		/*
-		 * 3: PIN6 will function as operating clock input function.
-		 * 2: PIN6 will act as voltage fault function
-		 * 1: PIN6 will act as OVT#
-		 * 0: PIN6 will act as GPIO3.
-		 */
-		pin6-mode = <1>;
-
-		/*
-		 * bit 1: enable FAN2 fan fault mechanism
-		 * bit 0: enable FAN1 fan fault mechanism
-		 */
-		enable_fan_fault = <1>;
-
-		/*
-		 * bit 1: enable over temperature mechanism of VT2
-		 * bit 0: enable over temperature mechanism of VT1
-		 */
-		enable_temp_fault = <1>;
-	};
-
-	sgtl5000: audio-codec@a {
-		compatible = "fsl,sgtl5000";
-		#sound-dai-cells = <0>;
-		reg = <0x0a>;
-		VDDA-supply = <&reg_audio_vdda>;
-		VDDIO-supply = <&reg_audio_vddio>;
-		VDDD-supply = <&reg_audio_vddd>;
-
-		micbias-resistor-k-ohms = <2>;
-		micbias-voltage-m-volts = <1575>;
-
-		force-use-pll;
-
-		#define SGTL5000_SYS_FS_32k     0x0
-		#define SGTL5000_SYS_FS_44_1k   0x1
-		#define SGTL5000_SYS_FS_48k     0x2
-		#define SGTL5000_SYS_FS_96k     0x3
-		force-sample-rate = <SGTL5000_SYS_FS_44_1k>;
-
-		clocks = <&audiomix_clk IMX8MP_CLK_AUDIOMIX_SAI3_MCLK1>;
-		clock-names = "mclk";
-		assigned-clock-rates = <24576000>;
-	};
-};
-
-&sai3 {
-	#sound-dai-cells = <0>;
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_sai3>;
-	assigned-clocks = <&clk IMX8MP_CLK_SAI3>;
-	assigned-clock-parents = <&clk IMX8MP_AUDIO_PLL1_OUT>;
-	assigned-clock-rates = <24576000>;
-	clocks = <&audiomix_clk IMX8MP_CLK_AUDIOMIX_SAI3_IPG>, <&clk IMX8MP_CLK_DUMMY>,
-		<&audiomix_clk IMX8MP_CLK_AUDIOMIX_SAI3_MCLK1>, <&clk IMX8MP_CLK_DUMMY>,
-		<&clk IMX8MP_CLK_DUMMY>,<&clk IMX8MP_AUDIO_PLL1_OUT>,<&clk IMX8MP_AUDIO_PLL2_OUT>;
-	clock-names = "bus", "mclk0", "mclk1", "mclk2", "mclk3", "pll8k", "pll11k";
-	fsl,sai-mclk-direction-output;
-	status = "okay";
-};
-
-&sdma2 {
-	status = "okay";
-};
-
-&easrc {
-	fsl,asrc-rate  = <44100>;
-	status = "okay";
-};
-
-&i2c3 {
-	clock-frequency = <100000>;
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_i2c3>;
-	status = "okay";
-
-	touch_panel: touch_panel@41 {
-		compatible = "ilitek,ili251x";
-		pinctrl-0 = <&pinctrl_touch_irq>, <&pinctrl_touch_rst>;
-		interrupt-parent = <&gpio2>;
-		interrupts = <10 IRQ_TYPE_LEVEL_LOW>;
-		reg = <0x41>;
-		reset-gpios = <&gpio2 11 GPIO_ACTIVE_LOW>;
-	};
-};
-
-&i2c4 {
-	clock-frequency = <100000>;
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_i2c4>;
-	status = "okay";
-};
-
-&flexcan1 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_flexcan1>;
-	/* xceiver-supply = <&reg_can1_stby>; */
-	status = "okay";
-};
-
-&lcdif1 {
-	status = "disabled";
-};
-
-&lcdif2 {
-	status = "okay";
-};
-
-&lcdif3 {
-	status = "okay";
-};
-
-&ldb {
-	status = "okay";
-	fsl,dual-channel;
-	startup-delay-us = <40>;
-	lvds-channel@0 {
-		fsl,data-mapping = "spwg";
-		fsl,data-width = <24>;
-		status = "okay";
-
-		port@1 {
-			reg = <1>;
-			lvds0_port_1: endpoint {
-					remote-endpoint = <&panel_lvds0_in>;
-			};
-		};
-	};
-};
-
-&ldb_phy {
-	status = "okay";
-};
-
-&pcie{
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_pcie>;
-	disable-gpio = <&gpio1 13 GPIO_ACTIVE_LOW>;
-	reset-gpio = <&gpio1 15 GPIO_ACTIVE_LOW>;
-	ext_osc = <1>;
-	clocks = <&clk IMX8MP_CLK_HSIO_AXI_DIV>,
-		 <&clk IMX8MP_CLK_PCIE_AUX>,
-		 <&clk IMX8MP_CLK_PCIE_PHY>,
-		 <&clk IMX8MP_CLK_PCIE_ROOT>;
-	clock-names = "pcie", "pcie_aux", "pcie_phy", "pcie_bus";
-	assigned-clocks = <&clk IMX8MP_CLK_HSIO_AXI_SRC>,
-			  <&clk IMX8MP_CLK_PCIE_AUX>;
-	assigned-clock-parents = <&clk IMX8MP_SYS_PLL2_500M>,
-				 <&clk IMX8MP_SYS_PLL2_50M>;
-	reserved-region = <&rpmsg_reserved>;
-	status = "okay";
-};
-
-&pcie_phy{
-	status = "okay";
-};
-
-
-/* com1 */
-&uart1 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_uart1>;
-	assigned-clocks = <&clk IMX8MP_CLK_UART1>;
-	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_80M>;
-	fsl,uart-has-rtscts;
-	status = "okay";
-};
-
-/* console */
-&uart2 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_uart2>;
-	status = "okay";
-};
-
-/* RS-485 com3 */
-&uart3 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_uart3>;
-	assigned-clocks = <&clk IMX8MP_CLK_UART3>;
-	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_80M>;
-	status = "okay";
-};
-
-/* for f81439 com4*/
-&uart4 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_uart4>;
-	assigned-clocks = <&clk IMX8MP_CLK_UART4>;
-	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_80M>;
-	fsl,uart-has-rtscts;
-	status = "okay";
-};
-
-&usb3_phy0 {
-	fsl,phy-tx-vref-tune = <6>;
-	fsl,phy-tx-rise-tune = <0>;
-	fsl,phy-tx-preemp-amp-tune = <3>;
-	fsl,phy-comp-dis-tune = <7>;
-	fsl,pcs-tx-deemph-3p5db = <0x21>;
-	fsl,phy-pcs-tx-swing-full = <0x7f>;
-	status = "okay";
-};
-
-&usb3_0 {
-	status = "okay";
-};
-
-&usb_dwc3_0 {
-	dr_mode = "otg";
-	hnp-disable;
-	srp-disable;
-	adp-disable;
-	usb-role-switch;
-	status = "okay";
-
-	port {
-		usb3_drd_sw: endpoint {
-			remote-endpoint = <&otg_sw>;
-		};
-	};
-};
-
-&usb3_phy1 {
-	fsl,phy-tx-preemp-amp-tune = <2>;
-	status = "okay";
-};
-
-&usb3_1 {
-	status = "okay";
-};
-
-&usb_dwc3_1 {
-	dr_mode = "host";
-	status = "okay";
-};
-
-&usdhc2 {
-	pinctrl-names = "default", "state_100mhz", "state_200mhz";
-	pinctrl-0 = <&pinctrl_usdhc2>, <&pinctrl_usdhc2_gpio>;
-	pinctrl-1 = <&pinctrl_usdhc2_100mhz>, <&pinctrl_usdhc2_gpio>;
-	pinctrl-2 = <&pinctrl_usdhc2_200mhz>, <&pinctrl_usdhc2_gpio>;
-	cd-gpios = <&gpio2 12 GPIO_ACTIVE_LOW>;
-	vmmc-supply = <&reg_usdhc2_vmmc>;
-	bus-width = <4>;
-	status = "okay";
-};
-
-/* eMMC */
-&usdhc3 {
-	pinctrl-names = "default", "state_100mhz", "state_200mhz";
-	pinctrl-0 = <&pinctrl_usdhc3>;
-	pinctrl-1 = <&pinctrl_usdhc3_100mhz>;
-	pinctrl-2 = <&pinctrl_usdhc3_200mhz>;
-	bus-width = <8>;
-	non-removable;
-	status = "okay";
-};
-
-&wdog1 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_wdog>;
-	fsl,ext-reset-output;
-	status = "okay";
-};
-
-&iomuxc {
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_hog>;
-
-	pinctrl_hog: hoggrp {
-		fsl,pins = <
-			MX8MP_IOMUXC_HDMI_DDC_SCL__HDMIMIX_EARC_SCL	0x400001c3
-			MX8MP_IOMUXC_HDMI_DDC_SDA__HDMIMIX_EARC_SDA	0x400001c3
-			MX8MP_IOMUXC_HDMI_HPD__HDMIMIX_EARC_DC_HPD	0x40000019
-			MX8MP_IOMUXC_HDMI_CEC__HDMIMIX_EARC_CEC		0x40000019
-			MX8MP_IOMUXC_SD1_CLK__GPIO2_IO00	0x16
-			MX8MP_IOMUXC_SD1_CMD__GPIO2_IO01	0x16
-			MX8MP_IOMUXC_SD1_DATA0__GPIO2_IO02	0x16
-			MX8MP_IOMUXC_SD1_DATA1__GPIO2_IO03	0x16
-			MX8MP_IOMUXC_SD1_DATA2__GPIO2_IO04	0x16
-			MX8MP_IOMUXC_SD1_DATA3__GPIO2_IO05	0x16
-			MX8MP_IOMUXC_SD1_DATA4__GPIO2_IO06	0x16
-			MX8MP_IOMUXC_SD1_DATA5__GPIO2_IO07	0x16
-
-			MX8MP_IOMUXC_SAI3_RXFS__GPIO4_IO28	0x16 /* FAN_FAULT# */
-			MX8MP_IOMUXC_SAI3_RXC__GPIO4_IO29	0x16 /* OVT# */
-		>;
-	};
-
-	pinctrl_sai3: sai3grp {
-		fsl,pins = <
-			MX8MP_IOMUXC_SAI3_TXFS__AUDIOMIX_SAI3_TX_SYNC   0xd6
-			MX8MP_IOMUXC_SAI3_TXC__AUDIOMIX_SAI3_TX_BCLK    0xd6
-			MX8MP_IOMUXC_SAI3_RXD__AUDIOMIX_SAI3_RX_DATA00  0xd6
-			MX8MP_IOMUXC_SAI3_TXD__AUDIOMIX_SAI3_TX_DATA00  0xd6
-			MX8MP_IOMUXC_SAI3_MCLK__AUDIOMIX_SAI3_MCLK      0xd6
-		>;
-	};
-
-	pinctrl_backlight_en: backlight_en {
-		fsl,pins = <
-			MX8MP_IOMUXC_GPIO1_IO01__GPIO1_IO01 0x16 /* LVDS_BL_EN */
-		>;
-	};
-
-	pinctrl_backlight_pwm2: backlight_pwm2 {
-		fsl,pins = <
-			MX8MP_IOMUXC_GPIO1_IO09__PWM2_OUT	0x116
-		>;
-	};
-
-	pinctrl_panel_pwr_en: panel_pwr_en {
-		fsl,pins = <
-			MX8MP_IOMUXC_GPIO1_IO00__GPIO1_IO00	0x16 /* panel power en */
-		>;
-	};
-
-	pinctrl_touch_irq: touch_irq {
-		fsl,pins = <
-			MX8MP_IOMUXC_SD1_RESET_B__GPIO2_IO10 0x16 /* touch irq */
-		>;
-	};
-
-	pinctrl_touch_rst: touch_rst {
-		fsl,pins = <
-			MX8MP_IOMUXC_SD1_STROBE__GPIO2_IO11 0x16 /* touch rst */
-		>;
-	};
-
-	pinctrl_sd_en: sd_en {
-		fsl,pins = <
-			MX8MP_IOMUXC_SD1_DATA6__GPIO2_IO08 0x16 /* uSD Enable */
-		>;
-	};
-
-	pinctrl_usb_hub_en: usb_hub_en {
-		fsl,pins = <
-			MX8MP_IOMUXC_SAI5_MCLK__GPIO3_IO25 0x16 /* USB Hub Enable */
-		>;
-	};
-
-	pinctrl_usb2_typea_en: usb2_typea_en {
-		fsl,pins = <
-			MX8MP_IOMUXC_SAI5_RXD2__GPIO3_IO23 0x16 /* USB 2.0-TypeA Enable */
-		>;
-	};
-
-	pinctrl_usb2_hdr_en: usb2_hdr_en {
-		fsl,pins = <
-			MX8MP_IOMUXC_SAI5_RXD3__GPIO3_IO24 0x16 /* USB 2.0-HDR Enable */
-		>;
-	};
-
-	pinctrl_usb2_otg_en: usb2_otg_en {
-		fsl,pins = <
-			MX8MP_IOMUXC_SAI5_RXD0__GPIO3_IO21 0x16 /* USB2_OTG Enable */
-		>;
-	};
-
-	pinctrl_usb3_typea_en: usb3_typea_en {
-		fsl,pins = <
-			MX8MP_IOMUXC_SAI5_RXD1__GPIO3_IO22 0x16 /* USB 3.0-TypeA Enable */
-		>;
-	};
-
-	pinctrl_dac5571_bl_en: dac5571_bl_en {
-		fsl,pins = <
-			MX8MP_IOMUXC_GPIO1_IO10__GPIO1_IO10	0x16 /* DAC5571_BL Enable */
-		>;
-	};
-
-	pinctrl_lvds_pwr_en: lvds_pwr_en {
-		fsl,pins = <
-			MX8MP_IOMUXC_SAI5_RXD2__GPIO3_IO23	0x16 /* LVDS Power Enable */
-		>;
-	};
-
-	pinctrl_buzzer: buzzer {
-		fsl,pins = <
-			MX8MP_IOMUXC_SPDIF_EXT_CLK__PWM1_OUT	0x116
-		>;
-	};
-
-	pinctrl_pwm3: pwm3grp {
-		fsl,pins = <
-			MX8MP_IOMUXC_GPIO1_IO14__PWM3_OUT	0x116
-		>;
-	};
-
-	pinctrl_ecspi1: ecspi1grp {
-		fsl,pins = <
-			MX8MP_IOMUXC_ECSPI1_SCLK__ECSPI1_SCLK		0x82
-			MX8MP_IOMUXC_ECSPI1_MOSI__ECSPI1_MOSI		0x82
-			MX8MP_IOMUXC_ECSPI1_MISO__ECSPI1_MISO		0x82
-		>;
-	};
-
-	pinctrl_ecspi1_cs: ecspi1cs {
-		fsl,pins = <
-			MX8MP_IOMUXC_ECSPI1_SS0__ECSPI1_SS0		0x40000
-		>;
-	};
-
-	pinctrl_eqos: eqosgrp {
-		fsl,pins = <
-			MX8MP_IOMUXC_ENET_MDC__ENET_QOS_MDC	0x3
-			MX8MP_IOMUXC_ENET_MDIO__ENET_QOS_MDIO	0x3
-			MX8MP_IOMUXC_ENET_RD0__ENET_QOS_RGMII_RD0	0x91
-			MX8MP_IOMUXC_ENET_RD1__ENET_QOS_RGMII_RD1	0x91
-			MX8MP_IOMUXC_ENET_RD2__ENET_QOS_RGMII_RD2	0x91
-			MX8MP_IOMUXC_ENET_RD3__ENET_QOS_RGMII_RD3	0x91
-			MX8MP_IOMUXC_ENET_RXC__CCM_ENET_QOS_CLOCK_GENERATE_RX_CLK	0x91
-			MX8MP_IOMUXC_ENET_RX_CTL__ENET_QOS_RGMII_RX_CTL	0x91
-			MX8MP_IOMUXC_ENET_TD0__ENET_QOS_RGMII_TD0		0x1f
-			MX8MP_IOMUXC_ENET_TD1__ENET_QOS_RGMII_TD1		0x1f
-			MX8MP_IOMUXC_ENET_TD2__ENET_QOS_RGMII_TD2		0x1f
-			MX8MP_IOMUXC_ENET_TD3__ENET_QOS_RGMII_TD3		0x1f
-			MX8MP_IOMUXC_ENET_TX_CTL__ENET_QOS_RGMII_TX_CTL	0x1f
-			MX8MP_IOMUXC_ENET_TXC__CCM_ENET_QOS_CLOCK_GENERATE_TX_CLK	0x1f
-		>;
-	};
-
-	pinctrl_eqos_rst_en: eqos_rst_en {
-		fsl,pins = <
-			MX8MP_IOMUXC_SAI1_RXFS__GPIO4_IO00		0x19
-		>;
-	};
-
-	pinctrl_fec: fecgrp {
-		fsl,pins = <
-			MX8MP_IOMUXC_SAI1_RXD2__ENET1_MDC		0x3
-			MX8MP_IOMUXC_SAI1_RXD3__ENET1_MDIO		0x3
-			MX8MP_IOMUXC_SAI1_RXD4__ENET1_RGMII_RD0		0x91
-			MX8MP_IOMUXC_SAI1_RXD5__ENET1_RGMII_RD1		0x91
-			MX8MP_IOMUXC_SAI1_RXD6__ENET1_RGMII_RD2		0x91
-			MX8MP_IOMUXC_SAI1_RXD7__ENET1_RGMII_RD3		0x91
-			MX8MP_IOMUXC_SAI1_TXC__ENET1_RGMII_RXC		0x91
-			MX8MP_IOMUXC_SAI1_TXFS__ENET1_RGMII_RX_CTL	0x91
-			MX8MP_IOMUXC_SAI1_TXD0__ENET1_RGMII_TD0		0x1f
-			MX8MP_IOMUXC_SAI1_TXD1__ENET1_RGMII_TD1		0x1f
-			MX8MP_IOMUXC_SAI1_TXD2__ENET1_RGMII_TD2		0x1f
-			MX8MP_IOMUXC_SAI1_TXD3__ENET1_RGMII_TD3		0x1f
-			MX8MP_IOMUXC_SAI1_TXD4__ENET1_RGMII_TX_CTL	0x1f
-			MX8MP_IOMUXC_SAI1_TXD5__ENET1_RGMII_TXC		0x1f
-		>;
-	};
-
-	pinctrl_fec_rst_en: fec_rst_en {
-		fsl,pins = <
-			MX8MP_IOMUXC_SAI1_RXD0__GPIO4_IO02		0x19
-		>;
-	};
-
-	pinctrl_flexcan1: flexcan1grp {
-		fsl,pins = <
-			MX8MP_IOMUXC_SPDIF_RX__CAN1_RX          0x154
-			MX8MP_IOMUXC_SPDIF_TX__CAN1_TX          0x154
-		>;
-	};
-
-	pinctrl_dbg_led: dbgledgrp {
-		fsl,pins = <
-			MX8MP_IOMUXC_NAND_DATA00__GPIO3_IO06	0x19
-		>;
-	};
-
-	pinctrl_sys_led: sysledgrp {
-		fsl,pins = <
-			MX8MP_IOMUXC_NAND_READY_B__GPIO3_IO16	0x19
-		>;
-	};
-
-	pinctrl_i2c1: i2c1grp {
-		fsl,pins = <
-			MX8MP_IOMUXC_I2C1_SCL__I2C1_SCL		0x400001c3
-			MX8MP_IOMUXC_I2C1_SDA__I2C1_SDA		0x400001c3
-		>;
-	};
-
-	pinctrl_i2c2: i2c2grp {
-		fsl,pins = <
-			MX8MP_IOMUXC_I2C2_SCL__I2C2_SCL			0x400001c3
-			MX8MP_IOMUXC_I2C2_SDA__I2C2_SDA			0x400001c3
-		>;
-	};
-
-	pinctrl_i2c3: i2c3grp {
-		fsl,pins = <
-			MX8MP_IOMUXC_I2C3_SCL__I2C3_SCL			0x400001c3
-			MX8MP_IOMUXC_I2C3_SDA__I2C3_SDA			0x400001c3
-		>;
-	};
-
-	pinctrl_i2c4: i2c4grp {
-		fsl,pins = <
-			MX8MP_IOMUXC_I2C4_SCL__I2C4_SCL			0x400001c3
-			MX8MP_IOMUXC_I2C4_SDA__I2C4_SDA			0x400001c3
-		>;
-	};
-
-	pinctrl_pcie: pciegrp {
-		fsl,pins = <
-			MX8MP_IOMUXC_UART4_RXD__HSIOMIX_PCIE_CLKREQ_B	0x61	/* open drain, pull up */
-			MX8MP_IOMUXC_GPIO1_IO15__GPIO1_IO15		0x41 /* PCIe_nRST */
-			MX8MP_IOMUXC_GPIO1_IO13__GPIO1_IO13		0x41 /* PCIe_nDIS */
-		>;
-	};
-
-	pinctrl_pmic: pmicirq {
-		fsl,pins = <
-			MX8MP_IOMUXC_GPIO1_IO03__GPIO1_IO03	0x41
-		>;
-	};
-
-	pinctrl_com_pwr_en: com_pwr_en {
-		fsl,pins = <
-				MX8MP_IOMUXC_SD1_DATA7__GPIO2_IO09      0x16 /* COM_PWR_EN */
-		>;
-	};
-
-	pinctrl_uart1: uart1grp {
-		fsl,pins = <
-			MX8MP_IOMUXC_SAI2_RXC__UART1_DCE_RX     0x140
-			MX8MP_IOMUXC_SAI2_RXFS__UART1_DCE_TX    0x140
-			MX8MP_IOMUXC_SAI2_TXFS__UART1_DCE_CTS   0x140
-			MX8MP_IOMUXC_SAI2_RXD0__UART1_DCE_RTS   0x140
-		>;
-	};
-
-	pinctrl_uart2: uart2grp {
-		fsl,pins = <
-			MX8MP_IOMUXC_UART2_RXD__UART2_DCE_RX	0x49
-			MX8MP_IOMUXC_UART2_TXD__UART2_DCE_TX	0x49
-		>;
-	};
-
-	pinctrl_uart3: uart3grp {
-		fsl,pins = <
-			MX8MP_IOMUXC_UART3_RXD__UART3_DCE_RX            0x140
-			MX8MP_IOMUXC_UART3_TXD__UART3_DCE_TX            0x140
-		>;
-	};
-
-	pinctrl_uart4: uart4grp {
-		fsl,pins = <
-			MX8MP_IOMUXC_ECSPI2_SS0__UART4_DCE_RTS		0x140
-			MX8MP_IOMUXC_ECSPI2_MOSI__UART4_DCE_TX		0x140
-			MX8MP_IOMUXC_ECSPI2_MISO__UART4_DCE_CTS		0x140
-			MX8MP_IOMUXC_ECSPI2_SCLK__UART4_DCE_RX		0x140
-		>;
-	};
-
-	pinctrl_f81439: f81439grp {
-		fsl,pins = <
-			MX8MP_IOMUXC_SAI2_TXC__GPIO4_IO25			0x140
-			MX8MP_IOMUXC_SAI2_TXD0__GPIO4_IO26			0x140
-			MX8MP_IOMUXC_SAI2_MCLK__GPIO4_IO27			0x140
-		>;
-	};
-
-	pinctrl_usdhc2_gpio: usdhc2grp-gpio {
-		fsl,pins = <
-			MX8MP_IOMUXC_SD2_CD_B__GPIO2_IO12 	0x1c4
-			MX8MP_IOMUXC_SD2_RESET_B__GPIO2_IO19	0x41
-		>;
-	};
-
-	pinctrl_usdhc2: usdhc2grp {
-		fsl,pins = <
-			MX8MP_IOMUXC_SD2_CLK__USDHC2_CLK	0x190
-			MX8MP_IOMUXC_SD2_CMD__USDHC2_CMD	0x1d0
-			MX8MP_IOMUXC_SD2_DATA0__USDHC2_DATA0	0x1d0
-			MX8MP_IOMUXC_SD2_DATA1__USDHC2_DATA1	0x1d0
-			MX8MP_IOMUXC_SD2_DATA2__USDHC2_DATA2	0x1d0
-			MX8MP_IOMUXC_SD2_DATA3__USDHC2_DATA3	0x1d0
-			MX8MP_IOMUXC_GPIO1_IO04__USDHC2_VSELECT	0xc1
-		>;
-	};
-
-	pinctrl_usdhc2_100mhz: usdhc2grp-100mhz {
-		fsl,pins = <
-			MX8MP_IOMUXC_SD2_CLK__USDHC2_CLK	0x194
-			MX8MP_IOMUXC_SD2_CMD__USDHC2_CMD	0x1d4
-			MX8MP_IOMUXC_SD2_DATA0__USDHC2_DATA0	0x1d4
-			MX8MP_IOMUXC_SD2_DATA1__USDHC2_DATA1	0x1d4
-			MX8MP_IOMUXC_SD2_DATA2__USDHC2_DATA2	0x1d4
-			MX8MP_IOMUXC_SD2_DATA3__USDHC2_DATA3	0x1d4
-			MX8MP_IOMUXC_GPIO1_IO04__USDHC2_VSELECT 0xc1
-		>;
-	};
-
-	pinctrl_usdhc2_200mhz: usdhc2grp-200mhz {
-		fsl,pins = <
-			MX8MP_IOMUXC_SD2_CLK__USDHC2_CLK	0x196
-			MX8MP_IOMUXC_SD2_CMD__USDHC2_CMD	0x1d6
-			MX8MP_IOMUXC_SD2_DATA0__USDHC2_DATA0	0x1d6
-			MX8MP_IOMUXC_SD2_DATA1__USDHC2_DATA1	0x1d6
-			MX8MP_IOMUXC_SD2_DATA2__USDHC2_DATA2	0x1d6
-			MX8MP_IOMUXC_SD2_DATA3__USDHC2_DATA3	0x1d6
-			MX8MP_IOMUXC_GPIO1_IO04__USDHC2_VSELECT 0xc1
-		>;
-	};
-
-	pinctrl_usdhc3: usdhc3grp {
-		fsl,pins = <
-			MX8MP_IOMUXC_NAND_WE_B__USDHC3_CLK	0x190
-			MX8MP_IOMUXC_NAND_WP_B__USDHC3_CMD	0x1d0
-			MX8MP_IOMUXC_NAND_DATA04__USDHC3_DATA0	0x1d0
-			MX8MP_IOMUXC_NAND_DATA05__USDHC3_DATA1	0x1d0
-			MX8MP_IOMUXC_NAND_DATA06__USDHC3_DATA2	0x1d0
-			MX8MP_IOMUXC_NAND_DATA07__USDHC3_DATA3	0x1d0
-			MX8MP_IOMUXC_NAND_RE_B__USDHC3_DATA4	0x1d0
-			MX8MP_IOMUXC_NAND_CE2_B__USDHC3_DATA5	0x1d0
-			MX8MP_IOMUXC_NAND_CE3_B__USDHC3_DATA6	0x1d0
-			MX8MP_IOMUXC_NAND_CLE__USDHC3_DATA7	0x1d0
-			MX8MP_IOMUXC_NAND_CE1_B__USDHC3_STROBE	0x190
-		>;
-	};
-
-	pinctrl_usdhc3_100mhz: usdhc3grp-100mhz {
-		fsl,pins = <
-			MX8MP_IOMUXC_NAND_WE_B__USDHC3_CLK	0x194
-			MX8MP_IOMUXC_NAND_WP_B__USDHC3_CMD	0x1d4
-			MX8MP_IOMUXC_NAND_DATA04__USDHC3_DATA0	0x1d4
-			MX8MP_IOMUXC_NAND_DATA05__USDHC3_DATA1	0x1d4
-			MX8MP_IOMUXC_NAND_DATA06__USDHC3_DATA2	0x1d4
-			MX8MP_IOMUXC_NAND_DATA07__USDHC3_DATA3	0x1d4
-			MX8MP_IOMUXC_NAND_RE_B__USDHC3_DATA4	0x1d4
-			MX8MP_IOMUXC_NAND_CE2_B__USDHC3_DATA5	0x1d4
-			MX8MP_IOMUXC_NAND_CE3_B__USDHC3_DATA6	0x1d4
-			MX8MP_IOMUXC_NAND_CLE__USDHC3_DATA7	0x1d4
-			MX8MP_IOMUXC_NAND_CE1_B__USDHC3_STROBE	0x194
-		>;
-	};
-
-	pinctrl_usdhc3_200mhz: usdhc3grp-200mhz {
-		fsl,pins = <
-			MX8MP_IOMUXC_NAND_WE_B__USDHC3_CLK	0x196
-			MX8MP_IOMUXC_NAND_WP_B__USDHC3_CMD	0x1d6
-			MX8MP_IOMUXC_NAND_DATA04__USDHC3_DATA0	0x1d6
-			MX8MP_IOMUXC_NAND_DATA05__USDHC3_DATA1	0x1d6
-			MX8MP_IOMUXC_NAND_DATA06__USDHC3_DATA2	0x1d6
-			MX8MP_IOMUXC_NAND_DATA07__USDHC3_DATA3	0x1d6
-			MX8MP_IOMUXC_NAND_RE_B__USDHC3_DATA4	0x1d6
-			MX8MP_IOMUXC_NAND_CE2_B__USDHC3_DATA5	0x1d6
-			MX8MP_IOMUXC_NAND_CE3_B__USDHC3_DATA6	0x1d6
-			MX8MP_IOMUXC_NAND_CLE__USDHC3_DATA7	0x1d6
-			MX8MP_IOMUXC_NAND_CE1_B__USDHC3_STROBE	0x196
-		>;
-	};
-
-	pinctrl_wdog: wdoggrp {
-		fsl,pins = <
-			MX8MP_IOMUXC_GPIO1_IO02__WDOG1_WDOG_B	0xc6
-		>;
-	};
-
-	pinctrl_keyb_pwr_en: keyb_pwr_en {
-		fsl,pins = <
-			MX8MP_IOMUXC_GPIO1_IO11__GPIO1_IO11	0x16 /* KeyB_PWR_EN */
-		>;
-	};
-
-	pinctrl_keyb_rst_en: keyb_rst_en {
-		fsl,pins = <
-			MX8MP_IOMUXC_GPIO1_IO05__GPIO1_IO05	0x16 /* KeyB_RST_EN */
-		>;
-	};
-
-	pinctrl_otg_sw: otg_sw {
-		fsl,pins = <
-			MX8MP_IOMUXC_GPIO1_IO10__GPIO1_IO10		0x1C4
-		>;
-	};
-};
-
-&vpu_g1 {
-	status = "okay";
-};
-
-&vpu_g2 {
-	status = "okay";
-};
-
-&vpu_vc8000e {
-	status = "okay";
-};
-
-&gpu_3d {
-	status = "okay";
-};
-
-&gpu_2d {
-	status = "okay";
-};
-
-&ml_vipsi {
-	status = "okay";
-};
-
-&mix_gpu_ml {
-	status = "okay";
-};
-
-&mipi_csi_0 {
-	#address-cells = <1>;
-	#size-cells = <0>;
-	status = "disabled";
-};
-
-&mipi_csi_1 {
-	#address-cells = <1>;
-	#size-cells = <0>;
-	status = "disabled";
-};
-
-&cameradev {
-	status = "okay";
-};
-
-&isp_0 {
-	status = "okay";
-};
-
-&isp_1 {
-	status = "okay";
-};
-
-&isi_0 {
-	status = "okay";
-
-	cap_device {
-		status = "okay";
-	};
-
-	m2m_device {
-		status = "okay";
-	};
-};
-
-&isi_1 {
-	status = "okay";
-
-	cap_device {
-		status = "okay";
-	};
-};
-
-&irqsteer_hdmi {
-	status = "okay";
-};
-
-&hdmimix_clk {
-	status = "okay";
-};
-
-&hdmimix_reset {
-	status = "okay";
-};
-
-&hdmi_pavi {
-	status = "okay";
-};
-
-&hdmi {
-	status = "okay";
-};
-
-&hdmiphy {
-	status = "okay";
-};
diff --git a/arch/arm64/boot/dts/freescale/imx8mp-m8mp553.dtsi b/arch/arm64/boot/dts/freescale/imx8mp-m8mp553.dtsi
new file mode 100644
index 00000000..ef18a2c
--- /dev/null
+++ b/arch/arm64/boot/dts/freescale/imx8mp-m8mp553.dtsi
@@ -0,0 +1,1389 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright 2021 DFI
+ * slash.huang@dfi.com
+ */
+
+/dts-v1/;
+
+#include <dt-bindings/usb/pd.h>
+#include "imx8mp.dtsi"
+
+
+/ {
+	model = "DFI M8MP553 Board";
+	compatible = "dfi,m8mp553", "fsl,imx8mp";
+
+	reserved-memory {
+		#address-cells = <2>;
+		#size-cells = <2>;
+		ranges;
+
+		rpmsg_reserved: rpmsg@0x55800000 {
+			no-map;
+			reg = <0 0x55800000 0 0x800000>;
+		};
+	};
+
+	chosen {
+		stdout-path = &uart2;
+	};
+
+	reg_can1_stby: regulator-can1-stby {
+		status = "disabled";
+		compatible = "regulator-fixed";
+		regulator-name = "can1-stby";
+		pinctrl-names = "default";
+		/* pinctrl-0 = <&pinctrl_flexcan1_reg>; */
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpio5 5 GPIO_ACTIVE_HIGH>;
+		enable-active-high;
+	};
+
+	reg_usdhc2_vmmc: regulator-usdhc2 {
+		compatible = "regulator-fixed";
+		regulator-name = "VSD_3V3";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpio2 19 GPIO_ACTIVE_HIGH>;
+		enable-active-high;
+		startup-delay-us = <100>;
+		off-on-delay-us = <12000>;
+	};
+
+	reg_gpio_sd: regulator-sd {
+			compatible = "regulator-gpio";
+			pinctrl-names = "default";
+			pinctrl-0 = <&pinctrl_sd_en>;
+			regulator-min-microvolt = <0000001>;
+			regulator-max-microvolt = <3300000>;
+			regulator-name = "gpio_sd";
+			regulator-type = "voltage";
+			gpios = <&gpio2 8 GPIO_ACTIVE_LOW>;
+			gpios-states = <1>;
+			states = <3300000 0x1 0000000 0x0>;
+	};
+
+	reg_gpio_usb_hub: regulator-usb_hub {
+			compatible = "regulator-gpio";
+			pinctrl-names = "default";
+			pinctrl-0 = <&pinctrl_usb_hub_en>;
+			regulator-min-microvolt = <0000001>;
+			regulator-max-microvolt = <3300000>;
+			regulator-name = "gpio_usb_hub";
+			regulator-type = "voltage";
+			gpios = <&gpio3 25 GPIO_ACTIVE_LOW>;
+			gpios-states = <1>;
+			states = <3300000 0x1 0000000 0x0>;
+	};
+
+	reg_gpio_usb3_typea: regulator-usb3-typea {
+			compatible = "regulator-gpio";
+			pinctrl-names = "default";
+			pinctrl-0 = <&pinctrl_usb3_typea_en>;
+			regulator-min-microvolt = <0000001>;
+			regulator-max-microvolt = <3300000>;
+			regulator-name = "gpio_usb3_typea";
+			regulator-type = "voltage";
+			gpios = <&gpio3 22 GPIO_ACTIVE_LOW>;
+			gpios-states = <1>;
+			states = <3300000 0x1 0000000 0x0>;
+	};
+
+	reg_gpio_usb2_typea: regulator-usb2-typea {
+			compatible = "regulator-gpio";
+			pinctrl-names = "default";
+			pinctrl-0 = <&pinctrl_usb2_typea_en>;
+			regulator-min-microvolt = <0000001>;
+			regulator-max-microvolt = <3300000>;
+			regulator-name = "gpio_usb2_typea";
+			regulator-type = "voltage";
+			gpios = <&gpio3 23 GPIO_ACTIVE_LOW>;
+			gpios-states = <1>;
+			states = <3300000 0x1 0000000 0x0>;
+	};
+
+	reg_gpio_usb2_hdr: regulator-usb2-hdr {
+			compatible = "regulator-gpio";
+			pinctrl-names = "default";
+			pinctrl-0 = <&pinctrl_usb2_hdr_en>;
+			regulator-min-microvolt = <0000001>;
+			regulator-max-microvolt = <3300000>;
+			regulator-name = "gpio_usb2_hdr";
+			regulator-type = "voltage";
+			gpios = <&gpio3 24 GPIO_ACTIVE_LOW>;
+			gpios-states = <1>;
+			states = <3300000 0x1 0000000 0x0>;
+	};
+
+	reg_gpio_usb2_otg: regulator-usb2-otg {
+			compatible = "regulator-gpio";
+			pinctrl-names = "default";
+			pinctrl-0 = <&pinctrl_usb2_otg_en>;
+			regulator-min-microvolt = <0000001>;
+			regulator-max-microvolt = <3300000>;
+			regulator-name = "gpio_usb2_otg";
+			regulator-type = "voltage";
+			gpios = <&gpio3 21 GPIO_ACTIVE_LOW>;
+			gpios-states = <1>;
+			states = <3300000 0x1 0000000 0x0>;
+	};
+
+	reg_lvds_panel: regulator-reg_lvds_panel {
+		compatible = "regulator-gpio";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_panel_pwr_en>;
+		regulator-min-microvolt = <0000001>;
+		regulator-max-microvolt = <3300000>;
+		regulator-name = "lvds_panel_pwr";
+		regulator-type = "voltage";
+		gpios = <&gpio1 0 GPIO_ACTIVE_HIGH>;
+		gpios-states = <0>;
+		states = <3300000 0x1 0000001 0x0>;
+		status = "okay";
+	};
+
+	reg_com_pwr: regulator-reg_com_pwr {
+		compatible = "regulator-gpio";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_com_pwr_en>;
+		regulator-min-microvolt = <0000001>;
+		regulator-max-microvolt = <3300000>;
+		regulator-name = "com_pwr_en";
+		regulator-type = "voltage";
+		gpios = <&gpio2 9 GPIO_ACTIVE_HIGH>;
+		gpios-states = <1>;
+		states = <3300000 0x1 0000001 0x0>;
+		status = "okay";
+	};
+
+	reg_audio_vdda: regulator-audio_vdda {
+		compatible = "regulator-fixed";
+		regulator-name = "fixed-3.3V";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-boot-on;
+		regulator-always-on;
+	};
+
+	reg_audio_vddio: regulator-audio_vddio {
+		compatible = "regulator-fixed";
+		regulator-name = "fixed-3.3V";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		regulator-boot-on;
+		regulator-always-on;
+	};
+
+	reg_audio_vddd: regulator-audio_vddd {
+		compatible = "regulator-fixed";
+		regulator-name = "fixed-1.8V";
+		regulator-min-microvolt = <1800000>;
+		regulator-max-microvolt = <1800000>;
+		regulator-boot-on;
+		regulator-always-on;
+	};
+
+	reg_keyb_pwr: regulator-reg_keyb_pwr {
+		compatible = "regulator-gpio";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_keyb_pwr_en>;
+		regulator-min-microvolt = <0000001>;
+		regulator-max-microvolt = <3300000>;
+		regulator-name = "keyb_pwr_en";
+		regulator-type = "voltage";
+		gpios = <&gpio1 11 GPIO_ACTIVE_HIGH>;
+		gpios-states = <1>;
+		states = <3300000 0x1 0000001 0x0>;
+		status = "okay";
+	};
+
+	reg_keyb_rst: regulator-reg_keyb_rst {
+		compatible = "regulator-gpio";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_keyb_rst_en>;
+		regulator-min-microvolt = <0000001>;
+		regulator-max-microvolt = <3300000>;
+		regulator-name = "keyb_rst_en";
+		regulator-type = "voltage";
+		gpios = <&gpio1 5 GPIO_ACTIVE_HIGH>;
+		gpios-states = <1>;
+		states = <3300000 0x1 0000001 0x0>;
+		status = "okay";
+	};
+
+	reg_eqos_rst: regulator-reg_eqos_rst {
+		compatible = "regulator-gpio";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_eqos_rst_en>;
+		regulator-min-microvolt = <0000001>;
+		regulator-max-microvolt = <3300000>;
+		regulator-name = "eqos_rst_en";
+		regulator-type = "voltage";
+		gpios = <&gpio4 0 GPIO_ACTIVE_HIGH>;
+		gpios-states = <1>;
+		states = <3300000 0x1 0000001 0x0>;
+		status = "okay";
+	};
+
+	reg_fec_rst: regulator-reg_fec_rst {
+		compatible = "regulator-gpio";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_fec_rst_en>;
+		regulator-min-microvolt = <0000001>;
+		regulator-max-microvolt = <3300000>;
+		regulator-name = "fec_rst_en";
+		regulator-type = "voltage";
+		gpios = <&gpio4 2 GPIO_ACTIVE_HIGH>;
+		gpios-states = <1>;
+		states = <3300000 0x1 0000001 0x0>;
+		status = "okay";
+	};
+
+	backlight_power: regulator-backlight_power {
+		compatible = "regulator-gpio";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_backlight_pwr>;
+		regulator-name = "lcd_backlight_pwr";
+		regulator-min-microvolt = <0000001>;
+		regulator-max-microvolt = <3300000>;
+		gpios = <&gpio4 20 GPIO_ACTIVE_HIGH>;
+		gpios-states = <0>;
+		states = <3300000 0x1 0000001 0x0>;
+	};
+
+	panel: lvds0 {
+		compatible = "panel-lvds";
+		status = "disabled";
+		width-mm = <261>;
+		height-mm = <163>;
+		data-mapping = "jeida-24";
+
+		backlight = <&lvds_backlight>;
+		power-supply = <&reg_lvds_panel>;
+
+		port {
+			panel_lvds0_in: endpoint {
+				remote-endpoint = <&lvds0_port_1>;
+			};
+		};
+	};
+
+
+	leds {
+		compatible = "gpio-leds";
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_sys_led> , <&pinctrl_dbg_led>;
+
+		led_sys: led_sys {
+			label = "led_sys";
+			gpios = <&gpio3 16 GPIO_ACTIVE_HIGH>;
+			default-state = "on";
+			linux,default-trigger = "gpio";
+		};
+
+		led_dbg: led_dbg {
+			label = "led_dbg";
+			gpios = <&gpio3 6 GPIO_ACTIVE_HIGH>;
+			default-state = "on";
+			linux,default-trigger = "heartbeat";
+		};
+
+	};
+
+	videopllsscm: videopll_sscm@30360034 {
+		compatible = "fsl,imx8mp-videopll-sscm";
+		reg = <0 0x30360034 0 0x1000>;
+		clocks = <&clk IMX8MP_VIDEO_PLL1>;
+		clock-names = "video_pll1";
+
+		/*
+		  MF: 125000Hz
+		  MR: 3.1%
+		*/
+		mf = <125000>;
+		mr = <310>;
+		pf = <2>;
+	};
+
+	/* mode select
+	 * {"rs422-full"},
+	 * {"pure-rs232"},
+	 * {"rs485-half tx-en low act"},
+	 * {"rs485-half tx-en hi  act"},
+	 * {"rs422-full with termi bias resistor"},
+	 * {"pure-rs232 co-exists rs485"},
+	 * {"rs485-half with termi bias resistor"},
+	 * {"shutdown"},
+	 */
+	f81439_ctl: f81439_ctl@0 {
+		compatible = "fintek, f81439";
+		pinctrl-0 = <&pinctrl_f81439>;
+		default-mode = "pure-rs232";
+		mode0-gpios = <&gpio4 25 GPIO_ACTIVE_HIGH>;
+		mode1-gpios = <&gpio4 26 GPIO_ACTIVE_HIGH>;
+		mode2-gpios = <&gpio4 27 GPIO_ACTIVE_HIGH>;
+	};
+
+	sound {
+		compatible = "simple-audio-card";
+		simple-audio-card,name = "sgtl5000";
+		simple-audio-card,format = "i2s";
+		simple-audio-card,convert-rate = <48000>;
+
+		simple-audio-card,bitclock-master = <&dailink0_master>;
+		simple-audio-card,frame-master = <&dailink0_master>;
+
+		simple-audio-card,widgets =
+			"Microphone", "Microphone Jack",
+			"Headphone", "Headphone Jack",
+			"Speaker", "Speaker Ext",
+			"Line", "Line In Jack";
+
+		simple-audio-card,routing =
+			"MIC_IN", "Microphone Jack",
+			"Microphone Jack", "Mic Bias",
+			"LINE_IN", "Line In Jack",
+			"Headphone Jack", "HP_OUT",
+			"Speaker Ext", "LINE_OUT",
+			"Playback", "AIFIN",
+			"AIFOUT", "Capture";
+
+		simple-audio-card,cpu {
+			#sound-dai-cells = <0>;
+			sound-dai = <&sai3>;
+		};
+
+		dailink0_master: simple-audio-card,codec {
+			sound-dai = <&sgtl5000>;
+			clocks = <&audiomix_clk IMX8MP_CLK_AUDIOMIX_SAI3_MCLK1>;
+		};
+	};
+
+	xhci_otg_sw: xhci_otg_sw {
+		pinctrl-names = "default";
+		pinctrl-0 = <&pinctrl_otg_sw>;
+		compatible = "imx8, gpio-otg-sw";
+		role-gpios = <&gpio1 10 GPIO_ACTIVE_HIGH>;
+
+		usb_con: connector {
+			port {
+				otg_sw: endpoint {
+					remote-endpoint = <&usb3_drd_sw>;
+				};
+			};
+		};
+
+	};
+};
+
+&clk {
+	init-on-array = <IMX8MP_CLK_HSIO_ROOT>;
+};
+
+&A53_0 {
+	cpu-supply = <&buck2_reg>;
+};
+
+/* IOJP1 */
+&pwm3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_pwm3>;
+	status = "okay";
+};
+
+/* buzzer use */
+&pwm1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_buzzer>;
+	status = "okay";
+};
+
+/* backlight use */
+&pwm2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_backlight_pwm2>;
+	status = "okay";
+};
+
+&ecspi1 {
+	#address-cells = <1>;
+	#size-cells = <0>;
+	fsl,spi-num-chipselects = <1>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_ecspi1 &pinctrl_ecspi1_cs>;
+	status = "okay";
+
+	spidev0: spi@0 {
+		status = "okay";
+		reg = <0>;
+		compatible = "rohm,dh2228fv";
+		spi-max-frequency = <500000>;
+	};
+};
+
+&eqos {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_eqos>;
+	phy-mode = "rgmii-id";
+	phy-handle = <&ethphy0>;
+	stmmc-disable-dma-swrst;
+	status = "okay";
+
+	mdio {
+		compatible = "snps,dwmac-mdio";
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		ethphy0: ethernet-phy@1 {
+			compatible = "ethernet-phy-ieee802.3-c22";
+			reg = <7>;
+			eee-broken-1000t;
+		};
+	};
+};
+
+&fec {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_fec>;
+	phy-mode = "rgmii-id";
+	phy-handle = <&ethphy1>;
+	fsl,magic-packet;
+	status = "okay";
+
+	mdio {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		ethphy1: ethernet-phy@1 {
+			compatible = "ethernet-phy-ieee802.3-c22";
+			reg = <5>;
+			eee-broken-1000t;
+		};
+	};
+};
+
+&i2c1 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c1>;
+	status = "okay";
+
+	pmic: pca9450@25 {
+		reg = <0x25>;
+		compatible = "nxp,pca9450";
+		/* PMIC PCA9450 PMIC_nINT GPIO1_IO3 */
+		pinctrl-0 = <&pinctrl_pmic>;
+		gpio_intr = <&gpio1 3 GPIO_ACTIVE_LOW>;
+
+		regulators {
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			pca9450,pmic-buck2-uses-i2c-dvs;
+			/* Run/Standby voltage */
+			pca9450,pmic-buck2-dvs-voltage = <950000>, <850000>;
+
+			buck1_reg: regulator@0 {
+				reg = <0>;
+				regulator-compatible = "buck1";
+				regulator-min-microvolt = <600000>;
+				regulator-max-microvolt = <2187500>;
+				regulator-boot-on;
+				regulator-always-on;
+				regulator-ramp-delay = <3125>;
+			};
+
+			buck2_reg: regulator@1 {
+				reg = <1>;
+				regulator-compatible = "buck2";
+				regulator-min-microvolt = <600000>;
+				regulator-max-microvolt = <2187500>;
+				regulator-boot-on;
+				regulator-always-on;
+				regulator-ramp-delay = <3125>;
+			};
+
+			buck4_reg: regulator@3 {
+				reg = <3>;
+				regulator-compatible = "buck4";
+				regulator-min-microvolt = <600000>;
+				regulator-max-microvolt = <3400000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+
+			buck5_reg: regulator@4 {
+				reg = <4>;
+				regulator-compatible = "buck5";
+				regulator-min-microvolt = <600000>;
+				regulator-max-microvolt = <3400000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+
+			buck6_reg: regulator@5 {
+				reg = <5>;
+				regulator-compatible = "buck6";
+				regulator-min-microvolt = <600000>;
+				regulator-max-microvolt = <3400000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+
+			ldo1_reg: regulator@6 {
+				reg = <6>;
+				regulator-compatible = "ldo1";
+				regulator-min-microvolt = <1600000>;
+				regulator-max-microvolt = <3300000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+
+			ldo2_reg: regulator@7 {
+				reg = <7>;
+				regulator-compatible = "ldo2";
+				regulator-min-microvolt = <800000>;
+				regulator-max-microvolt = <1150000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+
+			ldo3_reg: regulator@8 {
+				reg = <8>;
+				regulator-compatible = "ldo3";
+				regulator-min-microvolt = <800000>;
+				regulator-max-microvolt = <3300000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+
+			ldo4_reg: regulator@9 {
+				reg = <9>;
+				regulator-compatible = "ldo4";
+				regulator-min-microvolt = <800000>;
+				regulator-max-microvolt = <3300000>;
+				regulator-boot-on;
+				regulator-always-on;
+			};
+
+			ldo5_reg: regulator@10 {
+				reg = <10>;
+				regulator-compatible = "ldo5";
+				regulator-min-microvolt = <1800000>;
+				regulator-max-microvolt = <3300000>;
+			};
+		};
+	};
+
+	lm75: board-temp-sensor@4c {
+		compatible = "national,lm75b";
+		reg = <0x4c>;
+	};
+
+	s35390a: s35390a@30 {
+		compatible = "s35390a";
+		reg = <0x30>;
+
+		/*
+		 * set INT1 pin for user set frequency
+		 *
+		 * 0  : disable
+		 * 1  : 16 Hz
+		 * 2  : 8 Hz
+		 * 4  : 4 Hz
+		 * 8  : 2 Hz
+		 * 16 : 1 Hz
+		 */
+		user-set-frequency = <16>;
+	};
+};
+
+&i2c2 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c2>;
+	status = "okay";
+
+	at24c16: eeprom@50 {
+		compatible = "atmel,24c16";
+		reg = <0x50>;
+	};
+
+	f75387: f75387@2d {
+		compatible = "f75387";
+		reg = <0x2d>;
+
+		force-pwm-mode-3;
+
+		/*
+		 * pin5 is used as Fan fault function
+
+		 * 3: LED out(1Hz/0.5Hz select by LED_FREQ register)
+		 * 2: pin5 is used as Fan fault function
+		 * 1: pin5 is used as SMI
+		 * 0: pin5 function is GPIO2.(default)
+		 */
+		pin5-mode = <2>;
+
+		/*
+		 * 3: PIN6 will function as operating clock input function.
+		 * 2: PIN6 will act as voltage fault function
+		 * 1: PIN6 will act as OVT#
+		 * 0: PIN6 will act as GPIO3.
+		 */
+		pin6-mode = <1>;
+
+		/*
+		 * bit 1: enable FAN2 fan fault mechanism
+		 * bit 0: enable FAN1 fan fault mechanism
+		 */
+		enable_fan_fault = <1>;
+
+		/*
+		 * bit 1: enable over temperature mechanism of VT2
+		 * bit 0: enable over temperature mechanism of VT1
+		 */
+		enable_temp_fault = <1>;
+	};
+
+	sgtl5000: audio-codec@a {
+		compatible = "fsl,sgtl5000";
+		#sound-dai-cells = <0>;
+		reg = <0x0a>;
+		VDDA-supply = <&reg_audio_vdda>;
+		VDDIO-supply = <&reg_audio_vddio>;
+		VDDD-supply = <&reg_audio_vddd>;
+
+		micbias-resistor-k-ohms = <2>;
+		micbias-voltage-m-volts = <1575>;
+
+		force-use-pll;
+
+		#define SGTL5000_SYS_FS_32k     0x0
+		#define SGTL5000_SYS_FS_44_1k   0x1
+		#define SGTL5000_SYS_FS_48k     0x2
+		#define SGTL5000_SYS_FS_96k     0x3
+		force-sample-rate = <SGTL5000_SYS_FS_44_1k>;
+
+		clocks = <&audiomix_clk IMX8MP_CLK_AUDIOMIX_SAI3_MCLK1>;
+		clock-names = "mclk";
+		assigned-clock-rates = <24576000>;
+	};
+};
+
+&sai3 {
+	#sound-dai-cells = <0>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_sai3>;
+	assigned-clocks = <&clk IMX8MP_CLK_SAI3>;
+	assigned-clock-parents = <&clk IMX8MP_AUDIO_PLL1_OUT>;
+	assigned-clock-rates = <24576000>;
+	clocks = <&audiomix_clk IMX8MP_CLK_AUDIOMIX_SAI3_IPG>, <&clk IMX8MP_CLK_DUMMY>,
+		<&audiomix_clk IMX8MP_CLK_AUDIOMIX_SAI3_MCLK1>, <&clk IMX8MP_CLK_DUMMY>,
+		<&clk IMX8MP_CLK_DUMMY>,<&clk IMX8MP_AUDIO_PLL1_OUT>,<&clk IMX8MP_AUDIO_PLL2_OUT>;
+	clock-names = "bus", "mclk0", "mclk1", "mclk2", "mclk3", "pll8k", "pll11k";
+	fsl,sai-mclk-direction-output;
+	status = "okay";
+};
+
+&sdma2 {
+	status = "okay";
+};
+
+&easrc {
+	fsl,asrc-rate  = <44100>;
+	status = "okay";
+};
+
+&i2c3 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c3>;
+	status = "okay";
+
+	touch_panel: touch_panel@41 {
+		compatible = "ilitek,ili251x";
+		pinctrl-0 = <&pinctrl_touch_irq>, <&pinctrl_touch_rst>;
+		interrupt-parent = <&gpio2>;
+		interrupts = <10 IRQ_TYPE_LEVEL_LOW>;
+		reg = <0x41>;
+		reset-gpios = <&gpio2 11 GPIO_ACTIVE_LOW>;
+	};
+};
+
+&i2c4 {
+	clock-frequency = <100000>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_i2c4>;
+	status = "okay";
+};
+
+&flexcan1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_flexcan1>;
+	/* xceiver-supply = <&reg_can1_stby>; */
+	status = "okay";
+};
+
+&lcdif1 {
+	status = "disabled";
+};
+
+&lcdif2 {
+	status = "okay";
+};
+
+&lcdif3 {
+	status = "okay";
+};
+
+&ldb_phy {
+	status = "okay";
+};
+
+&pcie{
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_pcie>;
+	disable-gpio = <&gpio1 13 GPIO_ACTIVE_LOW>;
+	reset-gpio = <&gpio1 15 GPIO_ACTIVE_LOW>;
+	ext_osc = <1>;
+	clocks = <&clk IMX8MP_CLK_HSIO_AXI_DIV>,
+		 <&clk IMX8MP_CLK_PCIE_AUX>,
+		 <&clk IMX8MP_CLK_PCIE_PHY>,
+		 <&clk IMX8MP_CLK_PCIE_ROOT>;
+	clock-names = "pcie", "pcie_aux", "pcie_phy", "pcie_bus";
+	assigned-clocks = <&clk IMX8MP_CLK_HSIO_AXI_SRC>,
+			  <&clk IMX8MP_CLK_PCIE_AUX>;
+	assigned-clock-parents = <&clk IMX8MP_SYS_PLL2_500M>,
+				 <&clk IMX8MP_SYS_PLL2_50M>;
+	reserved-region = <&rpmsg_reserved>;
+	status = "okay";
+};
+
+&pcie_phy{
+	status = "okay";
+};
+
+
+/* com1 */
+&uart1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_uart1>;
+	assigned-clocks = <&clk IMX8MP_CLK_UART1>;
+	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_80M>;
+	fsl,uart-has-rtscts;
+	status = "okay";
+};
+
+/* console */
+&uart2 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_uart2>;
+	status = "okay";
+};
+
+/* RS-485 com3 */
+&uart3 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_uart3>;
+	assigned-clocks = <&clk IMX8MP_CLK_UART3>;
+	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_80M>;
+	status = "okay";
+};
+
+/* for f81439 com4*/
+&uart4 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_uart4>;
+	assigned-clocks = <&clk IMX8MP_CLK_UART4>;
+	assigned-clock-parents = <&clk IMX8MP_SYS_PLL1_80M>;
+	fsl,uart-has-rtscts;
+	status = "okay";
+};
+
+&usb3_phy0 {
+	fsl,phy-tx-vref-tune = <6>;
+	fsl,phy-tx-rise-tune = <0>;
+	fsl,phy-tx-preemp-amp-tune = <3>;
+	fsl,phy-comp-dis-tune = <7>;
+	fsl,pcs-tx-deemph-3p5db = <0x21>;
+	fsl,phy-pcs-tx-swing-full = <0x7f>;
+	status = "okay";
+};
+
+&usb3_0 {
+	status = "okay";
+};
+
+&usb_dwc3_0 {
+	dr_mode = "otg";
+	hnp-disable;
+	srp-disable;
+	adp-disable;
+	usb-role-switch;
+	status = "okay";
+
+	port {
+		usb3_drd_sw: endpoint {
+			remote-endpoint = <&otg_sw>;
+		};
+	};
+};
+
+&usb3_phy1 {
+	fsl,phy-tx-preemp-amp-tune = <2>;
+	status = "okay";
+};
+
+&usb3_1 {
+	status = "okay";
+};
+
+&usb_dwc3_1 {
+	dr_mode = "host";
+	status = "okay";
+};
+
+&usdhc2 {
+	pinctrl-names = "default", "state_100mhz", "state_200mhz";
+	pinctrl-0 = <&pinctrl_usdhc2>, <&pinctrl_usdhc2_gpio>;
+	pinctrl-1 = <&pinctrl_usdhc2_100mhz>, <&pinctrl_usdhc2_gpio>;
+	pinctrl-2 = <&pinctrl_usdhc2_200mhz>, <&pinctrl_usdhc2_gpio>;
+	cd-gpios = <&gpio2 12 GPIO_ACTIVE_LOW>;
+	vmmc-supply = <&reg_usdhc2_vmmc>;
+	bus-width = <4>;
+	status = "okay";
+};
+
+/* eMMC */
+&usdhc3 {
+	pinctrl-names = "default", "state_100mhz", "state_200mhz";
+	pinctrl-0 = <&pinctrl_usdhc3>;
+	pinctrl-1 = <&pinctrl_usdhc3_100mhz>;
+	pinctrl-2 = <&pinctrl_usdhc3_200mhz>;
+	bus-width = <8>;
+	non-removable;
+	status = "okay";
+};
+
+&wdog1 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_wdog>;
+	fsl,ext-reset-output;
+	status = "okay";
+};
+
+&iomuxc {
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_hog>;
+
+	pinctrl_hog: hoggrp {
+		fsl,pins = <
+			MX8MP_IOMUXC_HDMI_DDC_SCL__HDMIMIX_EARC_SCL	0x400001c3
+			MX8MP_IOMUXC_HDMI_DDC_SDA__HDMIMIX_EARC_SDA	0x400001c3
+			MX8MP_IOMUXC_HDMI_HPD__HDMIMIX_EARC_DC_HPD	0x40000019
+			MX8MP_IOMUXC_HDMI_CEC__HDMIMIX_EARC_CEC		0x40000019
+			MX8MP_IOMUXC_SD1_CLK__GPIO2_IO00	0x16
+			MX8MP_IOMUXC_SD1_CMD__GPIO2_IO01	0x16
+			MX8MP_IOMUXC_SD1_DATA0__GPIO2_IO02	0x16
+			MX8MP_IOMUXC_SD1_DATA1__GPIO2_IO03	0x16
+			MX8MP_IOMUXC_SD1_DATA2__GPIO2_IO04	0x16
+			MX8MP_IOMUXC_SD1_DATA3__GPIO2_IO05	0x16
+			MX8MP_IOMUXC_SD1_DATA4__GPIO2_IO06	0x16
+			MX8MP_IOMUXC_SD1_DATA5__GPIO2_IO07	0x16
+
+			MX8MP_IOMUXC_SAI3_RXFS__GPIO4_IO28	0x16 /* FAN_FAULT# */
+			MX8MP_IOMUXC_SAI3_RXC__GPIO4_IO29	0x16 /* OVT# */
+		>;
+	};
+
+	pinctrl_sai3: sai3grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_SAI3_TXFS__AUDIOMIX_SAI3_TX_SYNC   0xd6
+			MX8MP_IOMUXC_SAI3_TXC__AUDIOMIX_SAI3_TX_BCLK    0xd6
+			MX8MP_IOMUXC_SAI3_RXD__AUDIOMIX_SAI3_RX_DATA00  0xd6
+			MX8MP_IOMUXC_SAI3_TXD__AUDIOMIX_SAI3_TX_DATA00  0xd6
+			MX8MP_IOMUXC_SAI3_MCLK__AUDIOMIX_SAI3_MCLK      0xd6
+		>;
+	};
+
+	pinctrl_backlight_en: backlight_en {
+		fsl,pins = <
+			MX8MP_IOMUXC_GPIO1_IO01__GPIO1_IO01 0x16 /* LVDS_BL_EN */
+		>;
+	};
+
+	pinctrl_backlight_pwr: backlight_pwr {
+		fsl,pins = <
+			MX8MP_IOMUXC_SAI1_MCLK__GPIO4_IO20 0x16 /* LVDS_BL_PWR */
+		>;
+	};
+
+	pinctrl_backlight_pwm2: backlight_pwm2 {
+		fsl,pins = <
+			MX8MP_IOMUXC_GPIO1_IO09__PWM2_OUT	0x116
+		>;
+	};
+
+	pinctrl_panel_pwr_en: panel_pwr_en {
+		fsl,pins = <
+			MX8MP_IOMUXC_GPIO1_IO00__GPIO1_IO00	0x16 /* panel power en */
+		>;
+	};
+
+	pinctrl_touch_irq: touch_irq {
+		fsl,pins = <
+			MX8MP_IOMUXC_SD1_RESET_B__GPIO2_IO10 0x16 /* touch irq */
+		>;
+	};
+
+	pinctrl_touch_rst: touch_rst {
+		fsl,pins = <
+			MX8MP_IOMUXC_SD1_STROBE__GPIO2_IO11 0x16 /* touch rst */
+		>;
+	};
+
+	pinctrl_sd_en: sd_en {
+		fsl,pins = <
+			MX8MP_IOMUXC_SD1_DATA6__GPIO2_IO08 0x16 /* uSD Enable */
+		>;
+	};
+
+	pinctrl_usb_hub_en: usb_hub_en {
+		fsl,pins = <
+			MX8MP_IOMUXC_SAI5_MCLK__GPIO3_IO25 0x16 /* USB Hub Enable */
+		>;
+	};
+
+	pinctrl_usb2_typea_en: usb2_typea_en {
+		fsl,pins = <
+			MX8MP_IOMUXC_SAI5_RXD2__GPIO3_IO23 0x16 /* USB 2.0-TypeA Enable */
+		>;
+	};
+
+	pinctrl_usb2_hdr_en: usb2_hdr_en {
+		fsl,pins = <
+			MX8MP_IOMUXC_SAI5_RXD3__GPIO3_IO24 0x16 /* USB 2.0-HDR Enable */
+		>;
+	};
+
+	pinctrl_usb2_otg_en: usb2_otg_en {
+		fsl,pins = <
+			MX8MP_IOMUXC_SAI5_RXD0__GPIO3_IO21 0x16 /* USB2_OTG Enable */
+		>;
+	};
+
+	pinctrl_usb3_typea_en: usb3_typea_en {
+		fsl,pins = <
+			MX8MP_IOMUXC_SAI5_RXD1__GPIO3_IO22 0x16 /* USB 3.0-TypeA Enable */
+		>;
+	};
+
+	pinctrl_dac5571_bl_en: dac5571_bl_en {
+		fsl,pins = <
+			MX8MP_IOMUXC_GPIO1_IO10__GPIO1_IO10	0x16 /* DAC5571_BL Enable */
+		>;
+	};
+
+	pinctrl_lvds_pwr_en: lvds_pwr_en {
+		fsl,pins = <
+			MX8MP_IOMUXC_SAI5_RXD2__GPIO3_IO23	0x16 /* LVDS Power Enable */
+		>;
+	};
+
+	pinctrl_buzzer: buzzer {
+		fsl,pins = <
+			MX8MP_IOMUXC_SPDIF_EXT_CLK__PWM1_OUT	0x116
+		>;
+	};
+
+	pinctrl_pwm3: pwm3grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_GPIO1_IO14__PWM3_OUT	0x116
+		>;
+	};
+
+	pinctrl_ecspi1: ecspi1grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_ECSPI1_SCLK__ECSPI1_SCLK		0x82
+			MX8MP_IOMUXC_ECSPI1_MOSI__ECSPI1_MOSI		0x82
+			MX8MP_IOMUXC_ECSPI1_MISO__ECSPI1_MISO		0x82
+		>;
+	};
+
+	pinctrl_ecspi1_cs: ecspi1cs {
+		fsl,pins = <
+			MX8MP_IOMUXC_ECSPI1_SS0__ECSPI1_SS0		0x40000
+		>;
+	};
+
+	pinctrl_eqos: eqosgrp {
+		fsl,pins = <
+			MX8MP_IOMUXC_ENET_MDC__ENET_QOS_MDC	0x3
+			MX8MP_IOMUXC_ENET_MDIO__ENET_QOS_MDIO	0x3
+			MX8MP_IOMUXC_ENET_RD0__ENET_QOS_RGMII_RD0	0x91
+			MX8MP_IOMUXC_ENET_RD1__ENET_QOS_RGMII_RD1	0x91
+			MX8MP_IOMUXC_ENET_RD2__ENET_QOS_RGMII_RD2	0x91
+			MX8MP_IOMUXC_ENET_RD3__ENET_QOS_RGMII_RD3	0x91
+			MX8MP_IOMUXC_ENET_RXC__CCM_ENET_QOS_CLOCK_GENERATE_RX_CLK	0x91
+			MX8MP_IOMUXC_ENET_RX_CTL__ENET_QOS_RGMII_RX_CTL	0x91
+			MX8MP_IOMUXC_ENET_TD0__ENET_QOS_RGMII_TD0		0x1f
+			MX8MP_IOMUXC_ENET_TD1__ENET_QOS_RGMII_TD1		0x1f
+			MX8MP_IOMUXC_ENET_TD2__ENET_QOS_RGMII_TD2		0x1f
+			MX8MP_IOMUXC_ENET_TD3__ENET_QOS_RGMII_TD3		0x1f
+			MX8MP_IOMUXC_ENET_TX_CTL__ENET_QOS_RGMII_TX_CTL	0x1f
+			MX8MP_IOMUXC_ENET_TXC__CCM_ENET_QOS_CLOCK_GENERATE_TX_CLK	0x1f
+		>;
+	};
+
+	pinctrl_eqos_rst_en: eqos_rst_en {
+		fsl,pins = <
+			MX8MP_IOMUXC_SAI1_RXFS__GPIO4_IO00		0x19
+		>;
+	};
+
+	pinctrl_fec: fecgrp {
+		fsl,pins = <
+			MX8MP_IOMUXC_SAI1_RXD2__ENET1_MDC		0x3
+			MX8MP_IOMUXC_SAI1_RXD3__ENET1_MDIO		0x3
+			MX8MP_IOMUXC_SAI1_RXD4__ENET1_RGMII_RD0		0x91
+			MX8MP_IOMUXC_SAI1_RXD5__ENET1_RGMII_RD1		0x91
+			MX8MP_IOMUXC_SAI1_RXD6__ENET1_RGMII_RD2		0x91
+			MX8MP_IOMUXC_SAI1_RXD7__ENET1_RGMII_RD3		0x91
+			MX8MP_IOMUXC_SAI1_TXC__ENET1_RGMII_RXC		0x91
+			MX8MP_IOMUXC_SAI1_TXFS__ENET1_RGMII_RX_CTL	0x91
+			MX8MP_IOMUXC_SAI1_TXD0__ENET1_RGMII_TD0		0x1f
+			MX8MP_IOMUXC_SAI1_TXD1__ENET1_RGMII_TD1		0x1f
+			MX8MP_IOMUXC_SAI1_TXD2__ENET1_RGMII_TD2		0x1f
+			MX8MP_IOMUXC_SAI1_TXD3__ENET1_RGMII_TD3		0x1f
+			MX8MP_IOMUXC_SAI1_TXD4__ENET1_RGMII_TX_CTL	0x1f
+			MX8MP_IOMUXC_SAI1_TXD5__ENET1_RGMII_TXC		0x1f
+		>;
+	};
+
+	pinctrl_fec_rst_en: fec_rst_en {
+		fsl,pins = <
+			MX8MP_IOMUXC_SAI1_RXD0__GPIO4_IO02		0x19
+		>;
+	};
+
+	pinctrl_flexcan1: flexcan1grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_SPDIF_RX__CAN1_RX          0x154
+			MX8MP_IOMUXC_SPDIF_TX__CAN1_TX          0x154
+		>;
+	};
+
+	pinctrl_dbg_led: dbgledgrp {
+		fsl,pins = <
+			MX8MP_IOMUXC_NAND_DATA00__GPIO3_IO06	0x19
+		>;
+	};
+
+	pinctrl_sys_led: sysledgrp {
+		fsl,pins = <
+			MX8MP_IOMUXC_NAND_READY_B__GPIO3_IO16	0x19
+		>;
+	};
+
+	pinctrl_i2c1: i2c1grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_I2C1_SCL__I2C1_SCL		0x400001c3
+			MX8MP_IOMUXC_I2C1_SDA__I2C1_SDA		0x400001c3
+		>;
+	};
+
+	pinctrl_i2c2: i2c2grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_I2C2_SCL__I2C2_SCL			0x400001c3
+			MX8MP_IOMUXC_I2C2_SDA__I2C2_SDA			0x400001c3
+		>;
+	};
+
+	pinctrl_i2c3: i2c3grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_I2C3_SCL__I2C3_SCL			0x400001c3
+			MX8MP_IOMUXC_I2C3_SDA__I2C3_SDA			0x400001c3
+		>;
+	};
+
+	pinctrl_i2c4: i2c4grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_I2C4_SCL__I2C4_SCL			0x400001c3
+			MX8MP_IOMUXC_I2C4_SDA__I2C4_SDA			0x400001c3
+		>;
+	};
+
+	pinctrl_pcie: pciegrp {
+		fsl,pins = <
+			MX8MP_IOMUXC_UART4_RXD__HSIOMIX_PCIE_CLKREQ_B	0x61	/* open drain, pull up */
+			MX8MP_IOMUXC_GPIO1_IO15__GPIO1_IO15		0x41 /* PCIe_nRST */
+			MX8MP_IOMUXC_GPIO1_IO13__GPIO1_IO13		0x41 /* PCIe_nDIS */
+		>;
+	};
+
+	pinctrl_pmic: pmicirq {
+		fsl,pins = <
+			MX8MP_IOMUXC_GPIO1_IO03__GPIO1_IO03	0x41
+		>;
+	};
+
+	pinctrl_com_pwr_en: com_pwr_en {
+		fsl,pins = <
+				MX8MP_IOMUXC_SD1_DATA7__GPIO2_IO09      0x16 /* COM_PWR_EN */
+		>;
+	};
+
+	pinctrl_uart1: uart1grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_SAI2_RXC__UART1_DCE_RX     0x140
+			MX8MP_IOMUXC_SAI2_RXFS__UART1_DCE_TX    0x140
+			MX8MP_IOMUXC_SAI2_TXFS__UART1_DCE_CTS   0x140
+			MX8MP_IOMUXC_SAI2_RXD0__UART1_DCE_RTS   0x140
+		>;
+	};
+
+	pinctrl_uart2: uart2grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_UART2_RXD__UART2_DCE_RX	0x49
+			MX8MP_IOMUXC_UART2_TXD__UART2_DCE_TX	0x49
+		>;
+	};
+
+	pinctrl_uart3: uart3grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_UART3_RXD__UART3_DCE_RX            0x140
+			MX8MP_IOMUXC_UART3_TXD__UART3_DCE_TX            0x140
+		>;
+	};
+
+	pinctrl_uart4: uart4grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_ECSPI2_SS0__UART4_DCE_RTS		0x140
+			MX8MP_IOMUXC_ECSPI2_MOSI__UART4_DCE_TX		0x140
+			MX8MP_IOMUXC_ECSPI2_MISO__UART4_DCE_CTS		0x140
+			MX8MP_IOMUXC_ECSPI2_SCLK__UART4_DCE_RX		0x140
+		>;
+	};
+
+	pinctrl_f81439: f81439grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_SAI2_TXC__GPIO4_IO25			0x140
+			MX8MP_IOMUXC_SAI2_TXD0__GPIO4_IO26			0x140
+			MX8MP_IOMUXC_SAI2_MCLK__GPIO4_IO27			0x140
+		>;
+	};
+
+	pinctrl_usdhc2_gpio: usdhc2grp-gpio {
+		fsl,pins = <
+			MX8MP_IOMUXC_SD2_CD_B__GPIO2_IO12 	0x1c4
+			MX8MP_IOMUXC_SD2_RESET_B__GPIO2_IO19	0x41
+		>;
+	};
+
+	pinctrl_usdhc2: usdhc2grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_SD2_CLK__USDHC2_CLK	0x190
+			MX8MP_IOMUXC_SD2_CMD__USDHC2_CMD	0x1d0
+			MX8MP_IOMUXC_SD2_DATA0__USDHC2_DATA0	0x1d0
+			MX8MP_IOMUXC_SD2_DATA1__USDHC2_DATA1	0x1d0
+			MX8MP_IOMUXC_SD2_DATA2__USDHC2_DATA2	0x1d0
+			MX8MP_IOMUXC_SD2_DATA3__USDHC2_DATA3	0x1d0
+			MX8MP_IOMUXC_GPIO1_IO04__USDHC2_VSELECT	0xc1
+		>;
+	};
+
+	pinctrl_usdhc2_100mhz: usdhc2grp-100mhz {
+		fsl,pins = <
+			MX8MP_IOMUXC_SD2_CLK__USDHC2_CLK	0x194
+			MX8MP_IOMUXC_SD2_CMD__USDHC2_CMD	0x1d4
+			MX8MP_IOMUXC_SD2_DATA0__USDHC2_DATA0	0x1d4
+			MX8MP_IOMUXC_SD2_DATA1__USDHC2_DATA1	0x1d4
+			MX8MP_IOMUXC_SD2_DATA2__USDHC2_DATA2	0x1d4
+			MX8MP_IOMUXC_SD2_DATA3__USDHC2_DATA3	0x1d4
+			MX8MP_IOMUXC_GPIO1_IO04__USDHC2_VSELECT 0xc1
+		>;
+	};
+
+	pinctrl_usdhc2_200mhz: usdhc2grp-200mhz {
+		fsl,pins = <
+			MX8MP_IOMUXC_SD2_CLK__USDHC2_CLK	0x196
+			MX8MP_IOMUXC_SD2_CMD__USDHC2_CMD	0x1d6
+			MX8MP_IOMUXC_SD2_DATA0__USDHC2_DATA0	0x1d6
+			MX8MP_IOMUXC_SD2_DATA1__USDHC2_DATA1	0x1d6
+			MX8MP_IOMUXC_SD2_DATA2__USDHC2_DATA2	0x1d6
+			MX8MP_IOMUXC_SD2_DATA3__USDHC2_DATA3	0x1d6
+			MX8MP_IOMUXC_GPIO1_IO04__USDHC2_VSELECT 0xc1
+		>;
+	};
+
+	pinctrl_usdhc3: usdhc3grp {
+		fsl,pins = <
+			MX8MP_IOMUXC_NAND_WE_B__USDHC3_CLK	0x190
+			MX8MP_IOMUXC_NAND_WP_B__USDHC3_CMD	0x1d0
+			MX8MP_IOMUXC_NAND_DATA04__USDHC3_DATA0	0x1d0
+			MX8MP_IOMUXC_NAND_DATA05__USDHC3_DATA1	0x1d0
+			MX8MP_IOMUXC_NAND_DATA06__USDHC3_DATA2	0x1d0
+			MX8MP_IOMUXC_NAND_DATA07__USDHC3_DATA3	0x1d0
+			MX8MP_IOMUXC_NAND_RE_B__USDHC3_DATA4	0x1d0
+			MX8MP_IOMUXC_NAND_CE2_B__USDHC3_DATA5	0x1d0
+			MX8MP_IOMUXC_NAND_CE3_B__USDHC3_DATA6	0x1d0
+			MX8MP_IOMUXC_NAND_CLE__USDHC3_DATA7	0x1d0
+			MX8MP_IOMUXC_NAND_CE1_B__USDHC3_STROBE	0x190
+		>;
+	};
+
+	pinctrl_usdhc3_100mhz: usdhc3grp-100mhz {
+		fsl,pins = <
+			MX8MP_IOMUXC_NAND_WE_B__USDHC3_CLK	0x194
+			MX8MP_IOMUXC_NAND_WP_B__USDHC3_CMD	0x1d4
+			MX8MP_IOMUXC_NAND_DATA04__USDHC3_DATA0	0x1d4
+			MX8MP_IOMUXC_NAND_DATA05__USDHC3_DATA1	0x1d4
+			MX8MP_IOMUXC_NAND_DATA06__USDHC3_DATA2	0x1d4
+			MX8MP_IOMUXC_NAND_DATA07__USDHC3_DATA3	0x1d4
+			MX8MP_IOMUXC_NAND_RE_B__USDHC3_DATA4	0x1d4
+			MX8MP_IOMUXC_NAND_CE2_B__USDHC3_DATA5	0x1d4
+			MX8MP_IOMUXC_NAND_CE3_B__USDHC3_DATA6	0x1d4
+			MX8MP_IOMUXC_NAND_CLE__USDHC3_DATA7	0x1d4
+			MX8MP_IOMUXC_NAND_CE1_B__USDHC3_STROBE	0x194
+		>;
+	};
+
+	pinctrl_usdhc3_200mhz: usdhc3grp-200mhz {
+		fsl,pins = <
+			MX8MP_IOMUXC_NAND_WE_B__USDHC3_CLK	0x196
+			MX8MP_IOMUXC_NAND_WP_B__USDHC3_CMD	0x1d6
+			MX8MP_IOMUXC_NAND_DATA04__USDHC3_DATA0	0x1d6
+			MX8MP_IOMUXC_NAND_DATA05__USDHC3_DATA1	0x1d6
+			MX8MP_IOMUXC_NAND_DATA06__USDHC3_DATA2	0x1d6
+			MX8MP_IOMUXC_NAND_DATA07__USDHC3_DATA3	0x1d6
+			MX8MP_IOMUXC_NAND_RE_B__USDHC3_DATA4	0x1d6
+			MX8MP_IOMUXC_NAND_CE2_B__USDHC3_DATA5	0x1d6
+			MX8MP_IOMUXC_NAND_CE3_B__USDHC3_DATA6	0x1d6
+			MX8MP_IOMUXC_NAND_CLE__USDHC3_DATA7	0x1d6
+			MX8MP_IOMUXC_NAND_CE1_B__USDHC3_STROBE	0x196
+		>;
+	};
+
+	pinctrl_wdog: wdoggrp {
+		fsl,pins = <
+			MX8MP_IOMUXC_GPIO1_IO02__WDOG1_WDOG_B	0xc6
+		>;
+	};
+
+	pinctrl_keyb_pwr_en: keyb_pwr_en {
+		fsl,pins = <
+			MX8MP_IOMUXC_GPIO1_IO11__GPIO1_IO11	0x16 /* KeyB_PWR_EN */
+		>;
+	};
+
+	pinctrl_keyb_rst_en: keyb_rst_en {
+		fsl,pins = <
+			MX8MP_IOMUXC_GPIO1_IO05__GPIO1_IO05	0x16 /* KeyB_RST_EN */
+		>;
+	};
+
+	pinctrl_otg_sw: otg_sw {
+		fsl,pins = <
+			MX8MP_IOMUXC_GPIO1_IO10__GPIO1_IO10		0x1C4
+		>;
+	};
+};
+
+&vpu_g1 {
+	status = "okay";
+};
+
+&vpu_g2 {
+	status = "okay";
+};
+
+&vpu_vc8000e {
+	status = "okay";
+};
+
+&gpu_3d {
+	status = "okay";
+};
+
+&gpu_2d {
+	status = "okay";
+};
+
+&ml_vipsi {
+	status = "okay";
+};
+
+&mix_gpu_ml {
+	status = "okay";
+};
+
+&mipi_csi_0 {
+	#address-cells = <1>;
+	#size-cells = <0>;
+	status = "disabled";
+};
+
+&mipi_csi_1 {
+	#address-cells = <1>;
+	#size-cells = <0>;
+	status = "disabled";
+};
+
+&cameradev {
+	status = "okay";
+};
+
+&isp_0 {
+	status = "okay";
+};
+
+&isp_1 {
+	status = "okay";
+};
+
+&isi_0 {
+	status = "okay";
+
+	cap_device {
+		status = "okay";
+	};
+
+	m2m_device {
+		status = "okay";
+	};
+};
+
+&isi_1 {
+	status = "okay";
+
+	cap_device {
+		status = "okay";
+	};
+};
+
+&irqsteer_hdmi {
+	status = "okay";
+};
+
+&hdmimix_clk {
+	status = "okay";
+};
+
+&hdmimix_reset {
+	status = "okay";
+};
+
+&hdmi_pavi {
+	status = "okay";
+};
+
+&hdmi {
+	status = "okay";
+};
+
+&hdmiphy {
+	status = "okay";
+};
diff --git a/arch/arm64/configs/imx_m8mp553_defconfig b/arch/arm64/configs/imx_m8mp553_defconfig
index 910dfa4..b2c0911 100644
--- a/arch/arm64/configs/imx_m8mp553_defconfig
+++ b/arch/arm64/configs/imx_m8mp553_defconfig
@@ -207,6 +207,7 @@ CONFIG_MTD_NAND_FSL_IFC=y
 CONFIG_MTD_SPI_NOR=y
 # CONFIG_MTD_SPI_NOR_USE_4K_SECTORS is not set
 CONFIG_MTD_UBI=y
+CONFIG_OF_OVERLAY=y
 CONFIG_BLK_DEV_LOOP=y
 CONFIG_BLK_DEV_NBD=m
 CONFIG_XEN_BLKDEV_BACKEND=m
@@ -244,41 +245,75 @@ CONFIG_DM_ZERO=m
 CONFIG_NETDEVICES=y
 CONFIG_MACVLAN=m
 CONFIG_MACVTAP=m
+CONFIG_VXLAN=m
 CONFIG_TUN=y
 CONFIG_VETH=m
 CONFIG_VIRTIO_NET=y
-CONFIG_AMD_XGBE=y
+# CONFIG_NET_VENDOR_3COM is not set
+# CONFIG_NET_VENDOR_ADAPTEC is not set
+# CONFIG_NET_VENDOR_AGERE is not set
+# CONFIG_NET_VENDOR_ALACRITECH is not set
+# CONFIG_NET_VENDOR_AMAZON is not set
+# CONFIG_NET_VENDOR_AMD is not set
+# CONFIG_NET_VENDOR_AQUANTIA is not set
+# CONFIG_NET_VENDOR_ARC is not set
 CONFIG_ATL1C=m
-CONFIG_BNX2X=m
-CONFIG_MACB=y
-CONFIG_THUNDER_NIC_PF=y
+# CONFIG_NET_VENDOR_AURORA is not set
+# CONFIG_NET_VENDOR_BROADCOM is not set
+# CONFIG_NET_VENDOR_BROCADE is not set
+# CONFIG_NET_VENDOR_CADENCE is not set
+# CONFIG_NET_VENDOR_CAVIUM is not set
+# CONFIG_NET_VENDOR_CHELSIO is not set
+# CONFIG_NET_VENDOR_CISCO is not set
+# CONFIG_NET_VENDOR_CORTINA is not set
+# CONFIG_NET_VENDOR_DEC is not set
+# CONFIG_NET_VENDOR_DLINK is not set
+# CONFIG_NET_VENDOR_EMULEX is not set
+# CONFIG_NET_VENDOR_EZCHIP is not set
 CONFIG_FEC=y
-CONFIG_FSL_SDK_DPAA_ETH=y
 CONFIG_FSL_DPAA2_ETH=y
 CONFIG_FSL_ENETC=y
 CONFIG_FSL_ENETC_VF=y
-CONFIG_HIX5HD2_GMAC=y
-CONFIG_HNS_DSAF=y
-CONFIG_HNS_ENET=y
-CONFIG_HNS3=y
-CONFIG_HNS3_HCLGE=y
-CONFIG_HNS3_ENET=y
-CONFIG_E1000=y
-CONFIG_E1000E=y
-CONFIG_IGB=y
-CONFIG_IGBVF=y
+# CONFIG_NET_VENDOR_HISILICON is not set
+# CONFIG_NET_VENDOR_HP is not set
+# CONFIG_NET_VENDOR_HUAWEI is not set
+# CONFIG_NET_VENDOR_INTEL is not set
 CONFIG_MVMDIO=y
-CONFIG_SKY2=y
-CONFIG_MLX4_EN=m
-CONFIG_MLX5_CORE=m
-CONFIG_MLX5_CORE_EN=y
-CONFIG_MSCC_OCELOT_SWITCH=y
-CONFIG_QCOM_EMAC=m
+# CONFIG_NET_VENDOR_MELLANOX is not set
+# CONFIG_NET_VENDOR_MICREL is not set
+# CONFIG_NET_VENDOR_MICROSEMI is not set
+# CONFIG_NET_VENDOR_MYRI is not set
+# CONFIG_NET_VENDOR_NATSEMI is not set
+# CONFIG_NET_VENDOR_NETERION is not set
+# CONFIG_NET_VENDOR_NETRONOME is not set
+# CONFIG_NET_VENDOR_NI is not set
+# CONFIG_NET_VENDOR_NVIDIA is not set
+# CONFIG_NET_VENDOR_OKI is not set
+# CONFIG_NET_VENDOR_PACKET_ENGINES is not set
+# CONFIG_NET_VENDOR_PENSANDO is not set
+# CONFIG_NET_VENDOR_QLOGIC is not set
+# CONFIG_NET_VENDOR_QUALCOMM is not set
+# CONFIG_NET_VENDOR_RDC is not set
+# CONFIG_NET_VENDOR_RENESAS is not set
+# CONFIG_NET_VENDOR_ROCKER is not set
+# CONFIG_NET_VENDOR_SAMSUNG is not set
+# CONFIG_NET_VENDOR_SEEQ is not set
+# CONFIG_NET_VENDOR_SOLARFLARE is not set
+# CONFIG_NET_VENDOR_SILAN is not set
+# CONFIG_NET_VENDOR_SIS is not set
 CONFIG_SMC91X=y
 CONFIG_SMSC911X=y
+# CONFIG_NET_VENDOR_SOCIONEXT is not set
 CONFIG_STMMAC_ETH=y
+# CONFIG_NET_VENDOR_SUN is not set
+# CONFIG_NET_VENDOR_SYNOPSYS is not set
+# CONFIG_NET_VENDOR_TEHUTI is not set
+# CONFIG_NET_VENDOR_TI is not set
+# CONFIG_NET_VENDOR_VIA is not set
+# CONFIG_NET_VENDOR_WIZNET is not set
 CONFIG_MDIO_BITBANG=y
 CONFIG_MDIO_BUS_MUX_MULTIPLEXER=y
+CONFIG_MDIO_THUNDER=y
 CONFIG_AQUANTIA_PHY=y
 CONFIG_AT803X_PHY=y
 CONFIG_INPHI_PHY=y
@@ -343,9 +378,6 @@ CONFIG_SERIAL_FSL_LINFLEXUART=y
 CONFIG_SERIAL_FSL_LINFLEXUART_CONSOLE=y
 CONFIG_SERIAL_DEV_BUS=y
 CONFIG_VIRTIO_CONSOLE=y
-CONFIG_IPMI_HANDLER=m
-CONFIG_IPMI_DEVICE_INTERFACE=m
-CONFIG_IPMI_SI=m
 CONFIG_TCG_TPM=y
 CONFIG_TCG_TIS_I2C_INFINEON=y
 CONFIG_I2C_CHARDEV=y
@@ -471,27 +503,171 @@ CONFIG_MXC_MIPI_CSI=y
 CONFIG_MXC_CAMERA_OV5640_MIPI_V2=y
 CONFIG_V4L_MEM2MEM_DRIVERS=y
 CONFIG_VIDEO_OV5640=y
+# CONFIG_CXD2880_SPI_DRV is not set
+# CONFIG_MEDIA_TUNER_SIMPLE is not set
+# CONFIG_MEDIA_TUNER_TDA18250 is not set
+# CONFIG_MEDIA_TUNER_TDA8290 is not set
+# CONFIG_MEDIA_TUNER_TDA827X is not set
+# CONFIG_MEDIA_TUNER_TDA18271 is not set
+# CONFIG_MEDIA_TUNER_TDA9887 is not set
+# CONFIG_MEDIA_TUNER_TEA5761 is not set
+# CONFIG_MEDIA_TUNER_TEA5767 is not set
+# CONFIG_MEDIA_TUNER_MSI001 is not set
+# CONFIG_MEDIA_TUNER_MT20XX is not set
+# CONFIG_MEDIA_TUNER_MT2060 is not set
+# CONFIG_MEDIA_TUNER_MT2063 is not set
+# CONFIG_MEDIA_TUNER_MT2266 is not set
+# CONFIG_MEDIA_TUNER_MT2131 is not set
+# CONFIG_MEDIA_TUNER_QT1010 is not set
+# CONFIG_MEDIA_TUNER_XC2028 is not set
+# CONFIG_MEDIA_TUNER_XC5000 is not set
+# CONFIG_MEDIA_TUNER_XC4000 is not set
+# CONFIG_MEDIA_TUNER_MXL5005S is not set
+# CONFIG_MEDIA_TUNER_MXL5007T is not set
+# CONFIG_MEDIA_TUNER_MC44S803 is not set
+# CONFIG_MEDIA_TUNER_MAX2165 is not set
+# CONFIG_MEDIA_TUNER_TDA18218 is not set
+# CONFIG_MEDIA_TUNER_FC0011 is not set
+# CONFIG_MEDIA_TUNER_FC0012 is not set
+# CONFIG_MEDIA_TUNER_FC0013 is not set
+# CONFIG_MEDIA_TUNER_TDA18212 is not set
+# CONFIG_MEDIA_TUNER_E4000 is not set
+# CONFIG_MEDIA_TUNER_FC2580 is not set
+# CONFIG_MEDIA_TUNER_M88RS6000T is not set
+# CONFIG_MEDIA_TUNER_TUA9001 is not set
+# CONFIG_MEDIA_TUNER_SI2157 is not set
+# CONFIG_MEDIA_TUNER_IT913X is not set
+# CONFIG_MEDIA_TUNER_R820T is not set
+# CONFIG_MEDIA_TUNER_MXL301RF is not set
+# CONFIG_MEDIA_TUNER_QM1D1C0042 is not set
+# CONFIG_MEDIA_TUNER_QM1D1B0004 is not set
+# CONFIG_DVB_STB0899 is not set
+# CONFIG_DVB_STB6100 is not set
+# CONFIG_DVB_STV090x is not set
+# CONFIG_DVB_STV0910 is not set
+# CONFIG_DVB_STV6110x is not set
+# CONFIG_DVB_STV6111 is not set
+# CONFIG_DVB_MXL5XX is not set
+# CONFIG_DVB_M88DS3103 is not set
+# CONFIG_DVB_DRXK is not set
+# CONFIG_DVB_TDA18271C2DD is not set
+# CONFIG_DVB_SI2165 is not set
+# CONFIG_DVB_MN88472 is not set
+# CONFIG_DVB_MN88473 is not set
+# CONFIG_DVB_CX24110 is not set
+# CONFIG_DVB_CX24123 is not set
+# CONFIG_DVB_MT312 is not set
+# CONFIG_DVB_ZL10036 is not set
+# CONFIG_DVB_ZL10039 is not set
+# CONFIG_DVB_S5H1420 is not set
+# CONFIG_DVB_STV0288 is not set
+# CONFIG_DVB_STB6000 is not set
+# CONFIG_DVB_STV0299 is not set
+# CONFIG_DVB_STV6110 is not set
+# CONFIG_DVB_STV0900 is not set
+# CONFIG_DVB_TDA8083 is not set
+# CONFIG_DVB_TDA10086 is not set
+# CONFIG_DVB_TDA8261 is not set
+# CONFIG_DVB_VES1X93 is not set
+# CONFIG_DVB_TUNER_ITD1000 is not set
+# CONFIG_DVB_TUNER_CX24113 is not set
+# CONFIG_DVB_TDA826X is not set
+# CONFIG_DVB_TUA6100 is not set
+# CONFIG_DVB_CX24116 is not set
+# CONFIG_DVB_CX24117 is not set
+# CONFIG_DVB_CX24120 is not set
+# CONFIG_DVB_SI21XX is not set
+# CONFIG_DVB_TS2020 is not set
+# CONFIG_DVB_DS3000 is not set
+# CONFIG_DVB_MB86A16 is not set
+# CONFIG_DVB_TDA10071 is not set
+# CONFIG_DVB_SP8870 is not set
+# CONFIG_DVB_SP887X is not set
+# CONFIG_DVB_CX22700 is not set
+# CONFIG_DVB_CX22702 is not set
+# CONFIG_DVB_S5H1432 is not set
+# CONFIG_DVB_DRXD is not set
+# CONFIG_DVB_L64781 is not set
+# CONFIG_DVB_TDA1004X is not set
+# CONFIG_DVB_NXT6000 is not set
+# CONFIG_DVB_MT352 is not set
+# CONFIG_DVB_ZL10353 is not set
+# CONFIG_DVB_DIB3000MB is not set
+# CONFIG_DVB_DIB3000MC is not set
+# CONFIG_DVB_DIB7000M is not set
+# CONFIG_DVB_DIB7000P is not set
+# CONFIG_DVB_DIB9000 is not set
+# CONFIG_DVB_TDA10048 is not set
+# CONFIG_DVB_AF9013 is not set
+# CONFIG_DVB_EC100 is not set
+# CONFIG_DVB_STV0367 is not set
+# CONFIG_DVB_CXD2820R is not set
+# CONFIG_DVB_CXD2841ER is not set
+# CONFIG_DVB_RTL2830 is not set
+# CONFIG_DVB_RTL2832 is not set
+# CONFIG_DVB_SI2168 is not set
+# CONFIG_DVB_ZD1301_DEMOD is not set
+# CONFIG_DVB_CXD2880 is not set
+# CONFIG_DVB_VES1820 is not set
+# CONFIG_DVB_TDA10021 is not set
+# CONFIG_DVB_TDA10023 is not set
+# CONFIG_DVB_STV0297 is not set
+# CONFIG_DVB_NXT200X is not set
+# CONFIG_DVB_OR51211 is not set
+# CONFIG_DVB_OR51132 is not set
+# CONFIG_DVB_BCM3510 is not set
+# CONFIG_DVB_LGDT330X is not set
+# CONFIG_DVB_LGDT3305 is not set
+# CONFIG_DVB_LGDT3306A is not set
+# CONFIG_DVB_LG2160 is not set
+# CONFIG_DVB_S5H1409 is not set
+# CONFIG_DVB_AU8522_DTV is not set
+# CONFIG_DVB_AU8522_V4L is not set
+# CONFIG_DVB_S5H1411 is not set
+# CONFIG_DVB_S921 is not set
+# CONFIG_DVB_DIB8000 is not set
+# CONFIG_DVB_MB86A20S is not set
+# CONFIG_DVB_TC90522 is not set
+# CONFIG_DVB_MN88443X is not set
+# CONFIG_DVB_PLL is not set
+# CONFIG_DVB_TUNER_DIB0070 is not set
+# CONFIG_DVB_TUNER_DIB0090 is not set
+# CONFIG_DVB_DRX39XYJ is not set
+# CONFIG_DVB_LNBH25 is not set
+# CONFIG_DVB_LNBH29 is not set
+# CONFIG_DVB_LNBP21 is not set
+# CONFIG_DVB_LNBP22 is not set
+# CONFIG_DVB_ISL6405 is not set
+# CONFIG_DVB_ISL6421 is not set
+# CONFIG_DVB_ISL6423 is not set
+# CONFIG_DVB_A8293 is not set
+# CONFIG_DVB_LGS8GL5 is not set
+# CONFIG_DVB_LGS8GXX is not set
+# CONFIG_DVB_ATBM8830 is not set
+# CONFIG_DVB_TDA665x is not set
+# CONFIG_DVB_IX2505V is not set
+# CONFIG_DVB_M88RS2000 is not set
+# CONFIG_DVB_AF9033 is not set
+# CONFIG_DVB_HORUS3A is not set
+# CONFIG_DVB_ASCOT2E is not set
+# CONFIG_DVB_HELENE is not set
+# CONFIG_DVB_CXD2099 is not set
+# CONFIG_DVB_SP2 is not set
 CONFIG_IMX_DPU_CORE=y
 CONFIG_IMX_LCDIF_CORE=y
 CONFIG_IMX_LCDIFV3_CORE=y
 CONFIG_DRM=y
-CONFIG_DRM_I2C_NXP_TDA998X=m
 CONFIG_DRM_MALI_DISPLAY=m
-CONFIG_DRM_NOUVEAU=m
-CONFIG_DRM_RCAR_LVDS=m
 CONFIG_DRM_PANEL_LVDS=y
 CONFIG_DRM_PANEL_SIMPLE=y
 CONFIG_DRM_PANEL_RAYDIUM_RM67191=y
 CONFIG_DRM_PANEL_SEIKO_43WVF1G=y
 CONFIG_DRM_FSL_IMX_LVDS_BRIDGE=y
-CONFIG_DRM_SII902X=m
-CONFIG_DRM_I2C_ADV7511=y
 CONFIG_DRM_NWL_MIPI_DSI=y
 CONFIG_DRM_CDNS_HDMI_CEC=y
 CONFIG_DRM_DW_HDMI_I2S_AUDIO=m
 CONFIG_DRM_DW_HDMI_GP_AUDIO=y
 CONFIG_DRM_DW_HDMI_CEC=y
-CONFIG_DRM_ITE_IT6263=y
 CONFIG_DRM_IMX=y
 CONFIG_DRM_IMX_LCDIF_MUX_DISPLAY=y
 CONFIG_DRM_IMX_PARALLEL_DISPLAY=y
@@ -505,18 +681,15 @@ CONFIG_DRM_IMX_SEC_DSIM=y
 CONFIG_DRM_IMX_CDNS_MHDP=y
 CONFIG_DRM_IMX_DCSS=y
 CONFIG_DRM_ETNAVIV=m
-CONFIG_DRM_HISI_HIBMC=m
-CONFIG_DRM_HISI_KIRIN=m
 CONFIG_DRM_MXSFB=y
 CONFIG_DRM_PL111=m
 CONFIG_DRM_LIMA=m
 CONFIG_DRM_PANFROST=m
+CONFIG_DRM_LEGACY=y
 CONFIG_FB_ARMCLCD=y
 CONFIG_FB_EFI=y
 CONFIG_BACKLIGHT_GENERIC=m
 CONFIG_BACKLIGHT_PWM=y
-CONFIG_BACKLIGHT_LP855X=m
-CONFIG_BACKLIGHT_DAC5571=y
 CONFIG_LOGO=y
 # CONFIG_LOGO_LINUX_MONO is not set
 # CONFIG_LOGO_LINUX_VGA16 is not set
@@ -782,6 +955,7 @@ CONFIG_TEE=y
 CONFIG_OPTEE=y
 CONFIG_MUX_MMIO=y
 CONFIG_MXC_SIM=y
+# CONFIG_MXC_IMX_DMX_HW is not set
 CONFIG_MXC_EMVSIM=y
 CONFIG_MXC_MLB150=y
 CONFIG_EXT2_FS=y
@@ -857,6 +1031,7 @@ CONFIG_CRYPTO_DEV_FSL_DPAA2_CAAM=y
 CONFIG_INDIRECT_PIO=y
 CONFIG_CMA_SIZE_MBYTES=320
 CONFIG_PRINTK_TIME=y
+CONFIG_CONSOLE_LOGLEVEL_DEFAULT=4
 CONFIG_DEBUG_INFO=y
 CONFIG_DEBUG_FS=y
 CONFIG_MAGIC_SYSRQ=y
diff --git a/drivers/gpu/drm/panel/panel-lvds.c b/drivers/gpu/drm/panel/panel-lvds.c
index 5d61316..5497fed 100644
--- a/drivers/gpu/drm/panel/panel-lvds.c
+++ b/drivers/gpu/drm/panel/panel-lvds.c
@@ -103,7 +103,6 @@ static int panel_lvds_enable(struct drm_panel *panel)
 {
 	struct panel_lvds *lvds = to_panel_lvds(panel);
 
-	msleep(lvds->bl_delay);
 	if (lvds->backlight) {
 		lvds->backlight->props.state &= ~BL_CORE_FBBLANK;
 		lvds->backlight->props.power = FB_BLANK_UNBLANK;
diff --git a/drivers/usb/roles/Kconfig b/drivers/usb/roles/Kconfig
index 5117aeeb..4328a47 100644
--- a/drivers/usb/roles/Kconfig
+++ b/drivers/usb/roles/Kconfig
@@ -26,8 +26,8 @@ config USB_ROLES_INTEL_XHCI
 	  To compile the driver as a module, choose M here: the module will
 	  be called intel-xhci-usb-role-switch.
 
-config M8MP553_USB_ROLES_SW
-	tristate "DFI M8MP553 USB Role Switch"
+config IMX8_USB_ROLES_SW
+	tristate "NXP IMX8 USB Role Switch"
 	depends on USB_DWC3_IMX8MP
 	default y
 	help
diff --git a/drivers/usb/roles/Makefile b/drivers/usb/roles/Makefile
index b59ecc8..6f13f28 100644
--- a/drivers/usb/roles/Makefile
+++ b/drivers/usb/roles/Makefile
@@ -3,4 +3,4 @@
 obj-$(CONFIG_USB_ROLE_SWITCH)		+= roles.o
 roles-y					:= class.o
 obj-$(CONFIG_USB_ROLES_INTEL_XHCI)	+= intel-xhci-usb-role-switch.o
-obj-$(CONFIG_M8MP553_USB_ROLES_SW)	+= m8mp553-role-switch.o
+obj-$(CONFIG_IMX8_USB_ROLES_SW)	+= imx8-role-switch.o
diff --git a/drivers/usb/roles/imx8-role-switch.c b/drivers/usb/roles/imx8-role-switch.c
new file mode 100644
index 00000000..a9708b0
--- /dev/null
+++ b/drivers/usb/roles/imx8-role-switch.c
@@ -0,0 +1,175 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Base on Intel XHCI (Cherry Trail, Broxton and others) USB OTG role switch driver
+ *
+ * Author: Slash.Huang
+ * slash.linux.c@gmail.com
+ */
+
+#include <linux/acpi.h>
+#include <linux/delay.h>
+#include <linux/err.h>
+#include <linux/io.h>
+#include <linux/kernel.h>
+#include <linux/module.h>
+#include <linux/platform_device.h>
+#include <linux/pm_runtime.h>
+#include <linux/property.h>
+#include <linux/usb/role.h>
+#include <linux/gpio/consumer.h>
+
+#define DRV_NAME "imx_gpio_otg_sw"
+
+struct gpio_otg_sw_data {
+	struct device *dev;
+	struct usb_role_switch *role_sw;
+	struct gpio_desc *gpio_role;
+	int irq;
+};
+
+static enum usb_role otg_sw_get_role(struct gpio_otg_sw_data *data)
+{
+	enum usb_role role;
+	u32 val;
+
+	val = gpiod_get_value(data->gpio_role);
+
+	if (!val)
+		role = USB_ROLE_HOST;
+	else
+		role = USB_ROLE_DEVICE;
+
+	return role;
+}
+
+static irqreturn_t otg_sw_isr(int irq, void *dev_id)
+{
+	struct gpio_otg_sw_data *data;
+	int val;
+
+	data = (struct gpio_otg_sw_data *)dev_id;
+
+	val = gpiod_get_value(data->gpio_role);
+
+	if (!val)
+		usb_role_switch_set_role(data->role_sw, USB_ROLE_HOST);
+	else
+		usb_role_switch_set_role(data->role_sw, USB_ROLE_DEVICE);
+
+	return IRQ_HANDLED;
+}
+
+static int gpio_otg_sw_probe(struct platform_device *pdev)
+{
+	struct device *dev = &pdev->dev;
+	struct gpio_otg_sw_data *data;
+	char pin_name[5];
+	int ret, irq;
+	struct fwnode_handle *connector, *ep;
+	enum usb_role role;
+
+	data = devm_kzalloc(dev, sizeof(*data), GFP_KERNEL);
+	if (!data)
+		return -ENOMEM;
+
+	data->dev = &pdev->dev;
+
+	sprintf(pin_name, "role");
+	data->gpio_role = devm_gpiod_get(dev, pin_name, GPIOD_IN);
+	if (IS_ERR(data->gpio_role)) {
+		dev_err(dev, "otg role switch gpio get fail\n");
+		return PTR_ERR(data->gpio_role);
+	}
+
+	irq = gpiod_to_irq(data->gpio_role);
+	data->irq = irq;
+
+	platform_set_drvdata(pdev, data);
+
+	/* For backward compatibility check the connector child node first */
+	connector = device_get_named_child_node(data->dev, "connector");
+	if (connector) {
+		data->role_sw = fwnode_usb_role_switch_get(connector);
+	} else {
+		ep = fwnode_graph_get_next_endpoint(dev_fwnode(data->dev), NULL);
+		if (!ep) {
+			dev_err(&pdev->dev, "can't fwnode_graph_get_next_endpoint\n");
+			goto irq_fail;
+		}
+
+		connector = fwnode_graph_get_remote_port_parent(ep);
+		fwnode_handle_put(ep);
+		if (!connector) {
+			dev_err(&pdev->dev, "can't find connector in dts\n");
+			goto irq_fail;
+		}
+
+		data->role_sw = usb_role_switch_get(data->dev);
+	}
+
+	if (IS_ERR(data->role_sw)) {
+		ret = PTR_ERR(data->role_sw);
+		goto err_put_fwnode;
+	}
+
+	role = otg_sw_get_role(data);
+	if (role == USB_ROLE_HOST)
+		usb_role_switch_set_role(data->role_sw, USB_ROLE_HOST);
+	else
+		usb_role_switch_set_role(data->role_sw, USB_ROLE_DEVICE);
+
+	/* Request IRQ */
+	ret = devm_request_irq(&pdev->dev, irq, otg_sw_isr,
+				IRQF_TRIGGER_FALLING | IRQF_TRIGGER_RISING,
+				pdev->name, data);
+	if (ret) {
+		dev_err(&pdev->dev, "can't claim irq %d\n", irq);
+		goto irq_fail;
+	}
+
+	pm_runtime_set_active(dev);
+	pm_runtime_enable(dev);
+	return 0;
+
+err_put_fwnode:
+	fwnode_handle_put(connector);
+
+irq_fail:
+	kfree(data);
+
+	return -EINVAL;
+}
+
+static int gpio_otg_sw_remove(struct platform_device *pdev)
+{
+	struct gpio_otg_sw_data *data = platform_get_drvdata(pdev);
+
+	pm_runtime_disable(&pdev->dev);
+	usb_role_switch_unregister(data->role_sw);
+	kfree(data);
+	return 0;
+}
+
+static const struct of_device_id gpio_otg_sw_of_match[] = {
+	{
+		.compatible = "imx8, gpio-otg-sw",
+	},
+	{ /* end of table */ }
+};
+MODULE_DEVICE_TABLE(of, gpio_otg_sw_of_match);
+
+static struct platform_driver gpio_otg_sw_driver = {
+	.driver = {
+		.name = DRV_NAME,
+		.of_match_table = gpio_otg_sw_of_match,
+	},
+
+	.probe = gpio_otg_sw_probe,
+	.remove = gpio_otg_sw_remove,
+};
+
+module_platform_driver(gpio_otg_sw_driver);
+
+MODULE_AUTHOR("slash.huang <slash.linux.c@gmail.com>");
+MODULE_DESCRIPTION("IMX8 usb3 gpio role switch driver");
+MODULE_LICENSE("GPL");
diff --git a/drivers/usb/roles/m8mp553-role-switch.c b/drivers/usb/roles/m8mp553-role-switch.c
deleted file mode 100644
index b76b49e..00000000
--- a/drivers/usb/roles/m8mp553-role-switch.c
+++ /dev/null
@@ -1,179 +0,0 @@
-// SPDX-License-Identifier: GPL-2.0+
-/*
- * Base on Intel XHCI (Cherry Trail, Broxton and others) USB OTG role switch driver
- *
- * Author: Slash.Huang
- * slash.linux.c@gmail.com
- */
-
-#include <linux/acpi.h>
-#include <linux/delay.h>
-#include <linux/err.h>
-#include <linux/io.h>
-#include <linux/kernel.h>
-#include <linux/module.h>
-#include <linux/platform_device.h>
-#include <linux/pm_runtime.h>
-#include <linux/property.h>
-#include <linux/usb/role.h>
-#include <linux/gpio/consumer.h>
-
-#define DRV_NAME "m8mp553_otg_sw"
-
-struct m8mp553_otg_sw_data {
-	struct device *dev;
-	struct usb_role_switch *role_sw;
-	struct gpio_desc *gpio_role;
-	int irq;
-};
-
-static const struct software_node m8mp553_otg_sw_node = {
-	"m8mp553-xhci-usb-sw",
-};
-
-static enum usb_role otg_sw_get_role(struct m8mp553_otg_sw_data *data)
-{
-	enum usb_role role;
-	u32 val;
-
-	val = gpiod_get_value(data->gpio_role);
-
-	if (!val)
-		role = USB_ROLE_HOST;
-	else
-		role = USB_ROLE_DEVICE;
-
-	return role;
-}
-
-static irqreturn_t otg_sw_isr(int irq, void *dev_id)
-{
-	struct m8mp553_otg_sw_data *data;
-	int val;
-
-	data = (struct m8mp553_otg_sw_data *)dev_id;
-
-	val = gpiod_get_value(data->gpio_role);
-
-	if (!val)
-		usb_role_switch_set_role(data->role_sw, USB_ROLE_HOST);
-	else
-		usb_role_switch_set_role(data->role_sw, USB_ROLE_DEVICE);
-
-	return IRQ_HANDLED;
-}
-
-static int m8mp553_otg_sw_probe(struct platform_device *pdev)
-{
-	struct device *dev = &pdev->dev;
-	struct m8mp553_otg_sw_data *data;
-	char pin_name[5];
-	int ret, irq;
-	struct fwnode_handle *connector, *ep;
-	enum usb_role role;
-
-	data = devm_kzalloc(dev, sizeof(*data), GFP_KERNEL);
-	if (!data)
-		return -ENOMEM;
-
-	data->dev = &pdev->dev;
-
-	sprintf(pin_name, "role");
-	data->gpio_role = devm_gpiod_get(dev, pin_name, GPIOD_IN);
-	if (IS_ERR(data->gpio_role)) {
-		dev_err(dev, "otg role switch gpio get fail\n");
-		return PTR_ERR(data->gpio_role);
-	}
-
-	irq = gpiod_to_irq(data->gpio_role);
-	data->irq = irq;
-
-	platform_set_drvdata(pdev, data);
-
-	/* For backward compatibility check the connector child node first */
-	connector = device_get_named_child_node(data->dev, "connector");
-	if (connector) {
-		data->role_sw = fwnode_usb_role_switch_get(connector);
-	} else {
-		ep = fwnode_graph_get_next_endpoint(dev_fwnode(data->dev), NULL);
-		if (!ep) {
-			dev_err(&pdev->dev, "can't fwnode_graph_get_next_endpoint\n");
-			goto irq_fail;
-		}
-
-		connector = fwnode_graph_get_remote_port_parent(ep);
-		fwnode_handle_put(ep);
-		if (!connector) {
-			dev_err(&pdev->dev, "can't find connector in dts\n");
-			goto irq_fail;
-		}
-
-		data->role_sw = usb_role_switch_get(data->dev);
-	}
-
-	if (IS_ERR(data->role_sw)) {
-		ret = PTR_ERR(data->role_sw);
-		goto err_put_fwnode;
-	}
-
-	role = otg_sw_get_role(data);
-	if (role == USB_ROLE_HOST)
-		usb_role_switch_set_role(data->role_sw, USB_ROLE_HOST);
-	else
-		usb_role_switch_set_role(data->role_sw, USB_ROLE_DEVICE);
-
-	/* Request IRQ */
-	ret = devm_request_irq(&pdev->dev, irq, otg_sw_isr,
-				IRQF_TRIGGER_FALLING | IRQF_TRIGGER_RISING,
-				pdev->name, data);
-	if (ret) {
-		dev_err(&pdev->dev, "can't claim irq %d\n", irq);
-		goto irq_fail;
-	}
-
-	pm_runtime_set_active(dev);
-	pm_runtime_enable(dev);
-	return 0;
-
-err_put_fwnode:
-	fwnode_handle_put(connector);
-
-irq_fail:
-	kfree(data);
-
-	return -EINVAL;
-}
-
-static int m8mp553_otg_sw_remove(struct platform_device *pdev)
-{
-	struct m8mp553_otg_sw_data *data = platform_get_drvdata(pdev);
-
-	pm_runtime_disable(&pdev->dev);
-	usb_role_switch_unregister(data->role_sw);
-	kfree(data);
-	return 0;
-}
-
-static const struct of_device_id m8mp553_otg_sw_of_match[] = {
-	{
-		.compatible = "dfi, otg-sw",
-	},
-	{ /* end of table */ }
-};
-MODULE_DEVICE_TABLE(of, m8mp553_otg_sw_of_match);
-
-static struct platform_driver m8mp553_otg_sw_driver = {
-	.driver = {
-		.name = DRV_NAME,
-		.of_match_table = m8mp553_otg_sw_of_match,
-	},
-
-	.probe = m8mp553_otg_sw_probe,
-	.remove = m8mp553_otg_sw_remove,
-};
-
-module_platform_driver(m8mp553_otg_sw_driver);
-
-MODULE_AUTHOR("slash.huang <slash.huang@linux.c.com>");
-MODULE_DESCRIPTION("DFI USB3 role switch driver");
-MODULE_LICENSE("GPL");
diff --git a/drivers/video/backlight/pwm_bl.c b/drivers/video/backlight/pwm_bl.c
index 50ae210..7be50db 100644
--- a/drivers/video/backlight/pwm_bl.c
+++ b/drivers/video/backlight/pwm_bl.c
@@ -34,6 +34,8 @@ struct pwm_bl_data {
 	unsigned int		scale;
 	bool			legacy;
 	unsigned int		post_pwm_on_delay;
+	unsigned int		post_bl_on_delay;
+	unsigned int		post_en_on_delay;
 	unsigned int		pwm_off_delay;
 	int			(*notify)(struct device *,
 					  int brightness);
@@ -53,17 +55,23 @@ static void pwm_backlight_power_on(struct pwm_bl_data *pb)
 	if (pb->enabled)
 		return;
 
+	if (pb->post_bl_on_delay)
+		msleep(pb->post_bl_on_delay);
+
 	err = regulator_enable(pb->power_supply);
 	if (err < 0)
 		dev_err(pb->dev, "failed to enable power supply\n");
 
-	state.enabled = true;
-	pwm_apply_state(pb->pwm, &state);
+	regulator_set_voltage(pb->power_supply, BL_VOLT_MAX, BL_VOLT_MAX);
 
 	if (pb->post_pwm_on_delay)
 		msleep(pb->post_pwm_on_delay);
 
-	regulator_set_voltage(pb->power_supply, BL_VOLT_MAX, BL_VOLT_MAX);
+	state.enabled = true;
+	pwm_apply_state(pb->pwm, &state);
+
+	if (pb->post_en_on_delay)
+		msleep(pb->post_en_on_delay);
 
 	if (pb->enable_gpio)
 		gpiod_set_value_cansleep(pb->enable_gpio, 1);
@@ -89,8 +97,8 @@ static void pwm_backlight_power_off(struct pwm_bl_data *pb)
 	state.duty_cycle = 0;
 	pwm_apply_state(pb->pwm, &state);
 
-	regulator_set_voltage(pb->power_supply, BL_VOLT_MIN, BL_VOLT_MIN);
 	regulator_disable(pb->power_supply);
+	regulator_set_voltage(pb->power_supply, BL_VOLT_MIN, BL_VOLT_MIN);
 	pb->enabled = false;
 }
 
@@ -272,6 +280,12 @@ static int pwm_backlight_parse_dt(struct device *dev,
 			     &data->post_pwm_on_delay);
 	of_property_read_u32(node, "pwm-off-delay-ms", &data->pwm_off_delay);
 
+	of_property_read_u32(node, "post-bl-on-delay-ms",
+			     &data->post_bl_on_delay);
+
+	of_property_read_u32(node, "post-en-on-delay-ms",
+			     &data->post_en_on_delay);
+
 	data->enable_gpio = -EINVAL;
 
 	/*
@@ -506,11 +520,13 @@ static int pwm_backlight_probe(struct platform_device *pdev)
 	pb->dev = &pdev->dev;
 	pb->enabled = false;
 	pb->post_pwm_on_delay = data->post_pwm_on_delay;
+	pb->post_bl_on_delay = data->post_bl_on_delay;
+	pb->post_en_on_delay = data->post_en_on_delay;
 	pb->pwm_off_delay = data->pwm_off_delay;
 	strcpy(pb->fb_id, data->fb_id);
 
 	pb->enable_gpio = devm_gpiod_get_optional(&pdev->dev, "enable",
-						  GPIOD_ASIS);
+						  GPIOF_OUT_INIT_LOW);
 	if (IS_ERR(pb->enable_gpio)) {
 		ret = PTR_ERR(pb->enable_gpio);
 		goto err_alloc;
@@ -544,6 +560,7 @@ static int pwm_backlight_probe(struct platform_device *pdev)
 	    gpiod_get_direction(pb->enable_gpio) != 0)
 		gpiod_direction_output(pb->enable_gpio, 1);
 
+	gpiod_set_value_cansleep(pb->enable_gpio, 0);
 	pb->power_supply = devm_regulator_get(&pdev->dev, "power");
 	if (IS_ERR(pb->power_supply)) {
 		ret = PTR_ERR(pb->power_supply);
diff --git a/include/linux/pwm_backlight.h b/include/linux/pwm_backlight.h
index d5f73e1..9c319c7 100644
--- a/include/linux/pwm_backlight.h
+++ b/include/linux/pwm_backlight.h
@@ -15,6 +15,8 @@ struct platform_pwm_backlight_data {
 	unsigned int pwm_period_ns;
 	unsigned int *levels;
 	unsigned int post_pwm_on_delay;
+	unsigned int post_bl_on_delay;
+	unsigned int post_en_on_delay;
 	unsigned int pwm_off_delay;
 	/* TODO remove once all users are switched to gpiod_* API */
 	int enable_gpio;
